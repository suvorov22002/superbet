!SESSION 2022-09-27 05:45:44.162 -----------------------------------------------
eclipse.buildId=4.24.0.I20220607-0700
java.version=17.0.4
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=fr_FR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file D:\projets_JC\superbet\.metadata\.bak_0.log
Created Time: 2022-10-10 23:22:02.262

!ENTRY org.eclipse.jdt.ui 4 2 2022-10-10 23:22:02.263
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-10-10 23:22:02.268
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:02.521
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:22:02.522
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:22:02.522
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:13.262
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:22:13.263
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:22:13.264
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:14.366
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:22:14.367
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:22:14.368
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:15.782
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:22:15.783
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:22:15.784
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:16.889
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:22:16.890
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:22:16.890
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:23.756
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:22:23.757
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:22:23.758
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:24.599
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
			
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-10-10 23:22:24.600
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-10-10 23:22:24.601
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:24.838
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
		
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-10-10 23:22:24.839
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-10-10 23:22:24.840
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:24.891
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
		
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:22:24.892
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:22:24.893
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:26.319
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-10-10 23:22:26.321
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-10-10 23:22:26.322
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:26.552
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:22:26.553
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:22:26.554
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:28.141
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	]
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-10-10 23:22:28.143
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-10-10 23:22:28.144
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:28.739
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-10-10 23:22:28.741
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-10-10 23:22:28.741
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:29.870
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
		}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-10-10 23:22:29.871
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-10-10 23:22:29.871
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:30.145
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
		}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:22:30.147
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:22:30.148
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:31.325
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-10-10 23:22:31.327
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-10-10 23:22:31.327
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:31.557
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:22:31.558
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:22:31.559
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:33.420
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:22:33.421
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:22:33.422
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:22:40.336
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:22:40.337
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:22:40.338
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:23:02.874
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:23:02.876
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:23:02.877
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:23:05.108
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:23:05.109
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:23:05.109
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:23:05.357
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:23:05.358
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:23:05.359
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:23:06.537
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:23:06.538
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:23:06.539
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:23:08.488
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:23:08.489
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:23:08.489
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:23:11.542
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:23:11.543
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:23:11.543
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:23:11.785
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:23:11.787
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:23:11.787
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:23:36.282
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:23:36.283
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:23:36.283
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-10 23:23:37.401
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.Cagnotte;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao, CagnotteDAO cagnotteDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		this.cagnotteDao = cagnotteDao;
		supergameAPI = new SuperGameDAOAPI();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
			List<Partner> lpartner = partnerDao.getAllPartners();
			
			
			if(coderace == null){
				return;
			}
			if(coderace.length() < 5){
	  		  setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  resultat = "Nom très court, 5 caractères minimum";
	  		  return;
			}
		 try {
			//Partner partner = partnerDao.find(coderace);
			
			PartnerDto pdto = new PartnerDto();
			pdto.setCoderace(coderace);
			pdto.setZone(zone);
			ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			Partner p = resp.getPartner();
			String respMess = resp.getMessage();
			
			if ("EXISTS".equalsIgnoreCase(respMess)) {
				
				Partner partner = partnerDao.find(coderace);
				
				if (partner == null) {
					
					dd
						
					}
					else {
						setErreurs(FIELD_CODERACE, "Echec de creation");
						resultat = "Echec de creation";
						return;
					}
					
				}
				else {
					setErreurs(FIELD_CODERACE, "present");
					resultat = "Partenaire/Salle deja présent.";
				}
				
			}
			else if("NEW".equalsIgnoreCase(respMess)) {
				
			}
			
			
			
			
		
		   } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		   }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(login == null || pass == null || profil == null || partner == null){
				return;
			}
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			if(pass.length() < 5){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			
			
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", passChiffre);
			
			if(caissier == null){
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				try {
					if (n > 0) {
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(passChiffre);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						cais = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						//System.out.println("USER: "+caisDto);
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				if(n > 0){	
					Caissier user = caissierDao.findByLogin(login);
					//creation de la ligne des mouvements
					airtimeDao.createMvt(user.getIdCaissier(), 0);
					resultat_u="Caissier crée avec succes";
					return;
				}
				else{
					setErreurs_u(FIELD_LOGIN, "Echec de creation");
					resultat_u = "Echec de creation";
					return;
				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			resultat_c = "Cagnotte mis à  jour";
			String detail_lot = "";
			long t1,t2;
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			Cagnotte cagnotte = new Cagnotte();
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			Partner part = partnerDao.find(partner);
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
		//	System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setDay(dat1);
			cagnotte.setHeur(heur);
			//cagnotte.setPartner(part);
			cagnotte.setIdpart(part.getIdpartner());
			cagnotte.setJeu("");
			
			
			try {
				//cagnotteDao.create(cagnotte);
				
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private void addNewPartenaire() {
		
		Long n = 0L;
		Partner part = new Partner();
		part.setCoderace(coderace);
		part.setZone(zone);
		part.setGroupe(1);
		part.setActif(1);
		part.setCob("opened");
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			int nb_race = kenoDao.create(ken);
			
			misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
				return;
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return;
			}
	}
			
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1542)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4868)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4746)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3643)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-10-10 23:23:37.402
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1542)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4868)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4746)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3643)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-10-10 23:23:37.403
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1542)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4868)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4746)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3643)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SESSION 2022-10-14 05:54:33.802 -----------------------------------------------
eclipse.buildId=4.24.0.I20220607-0700
java.version=17.0.4
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=fr_FR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.fx.core.guice 4 0 2022-10-14 05:54:48.317
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.fx.core.guice [908]
  Unresolved requirement: Import-Package: com.google.inject; version="[1.3.0,2.0.0)"

	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1847)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1840)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1781)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1745)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1667)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.fx.ide.css.cssext 4 0 2022-10-14 05:54:48.343
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.fx.ide.css.cssext [912]
  Unresolved requirement: Require-Bundle: org.eclipse.xtext.generator; resolution:="optional"
  Unresolved requirement: Require-Bundle: org.objectweb.asm; bundle-version="[5.0.1,6.0.0)"; resolution:="optional"
  Unresolved requirement: Require-Bundle: org.eclipse.fx.core.guice; bundle-version="2.3.0"
    -> Bundle-SymbolicName: org.eclipse.fx.core.guice; bundle-version="3.0.0.201705220600"
       org.eclipse.fx.core.guice [908]
         Unresolved requirement: Import-Package: com.google.inject; version="[1.3.0,2.0.0)"

	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1847)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1840)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1781)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1745)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1667)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.fx.ide.css.cssext.proposals 4 0 2022-10-14 05:54:48.358
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.fx.ide.css.cssext.proposals [913]
  Unresolved requirement: Import-Package: org.eclipse.fx.ide.css.ui.extapi
    -> Export-Package: org.eclipse.fx.ide.css.ui.extapi; bundle-symbolic-name="org.eclipse.fx.ide.css.ui"; bundle-version="3.0.0.201705220750"; version="0.0.0"; x-internal:="true"
       org.eclipse.fx.ide.css.ui [917]
         Unresolved requirement: Require-Bundle: org.eclipse.fx.core.guice; bundle-version="2.3.0"
           -> Bundle-SymbolicName: org.eclipse.fx.core.guice; bundle-version="3.0.0.201705220600"
              org.eclipse.fx.core.guice [908]
                Unresolved requirement: Import-Package: com.google.inject; version="[1.3.0,2.0.0)"
  Unresolved requirement: Require-Bundle: org.eclipse.fx.ide.css.cssext; bundle-version="2.3.0"
    -> Bundle-SymbolicName: org.eclipse.fx.ide.css.cssext; bundle-version="3.0.0.201705220750"; singleton:="true"
       org.eclipse.fx.ide.css.cssext [912]
         Unresolved requirement: Require-Bundle: org.eclipse.xtext.generator; resolution:="optional"
         Unresolved requirement: Require-Bundle: org.eclipse.fx.core.guice; bundle-version="2.3.0"
           -> Bundle-SymbolicName: org.eclipse.fx.core.guice; bundle-version="3.0.0.201705220600"

	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1847)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1840)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1781)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1745)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1667)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.fx.ide.css.cssext.ui 4 0 2022-10-14 05:54:48.373
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.fx.ide.css.cssext.ui [914]
  Unresolved requirement: Require-Bundle: org.eclipse.fx.ide.css.cssext; visibility:="reexport"
    -> Bundle-SymbolicName: org.eclipse.fx.ide.css.cssext; bundle-version="3.0.0.201705220750"; singleton:="true"
       org.eclipse.fx.ide.css.cssext [912]
         Unresolved requirement: Require-Bundle: org.eclipse.xtext.generator; resolution:="optional"
         Unresolved requirement: Require-Bundle: org.objectweb.asm; bundle-version="[5.0.1,6.0.0)"; resolution:="optional"
         Unresolved requirement: Require-Bundle: org.eclipse.fx.core.guice; bundle-version="2.3.0"
           -> Bundle-SymbolicName: org.eclipse.fx.core.guice; bundle-version="3.0.0.201705220600"
              org.eclipse.fx.core.guice [908]
                Unresolved requirement: Import-Package: com.google.inject; version="[1.3.0,2.0.0)"
  Unresolved requirement: Require-Bundle: org.eclipse.fx.core.guice; bundle-version="2.3.0"
    -> Bundle-SymbolicName: org.eclipse.fx.core.guice; bundle-version="3.0.0.201705220600"

	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1847)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1840)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1781)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1745)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1667)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.fx.ide.css.ui 4 0 2022-10-14 05:54:48.383
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.fx.ide.css.ui [917]
  Unresolved requirement: Require-Bundle: org.eclipse.fx.core.guice; bundle-version="2.3.0"
    -> Bundle-SymbolicName: org.eclipse.fx.core.guice; bundle-version="3.0.0.201705220600"
       org.eclipse.fx.core.guice [908]
         Unresolved requirement: Import-Package: com.google.inject; version="[1.3.0,2.0.0)"

	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1847)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1840)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1781)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1745)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1667)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.core.resources 2 10035 2022-10-14 05:55:06.426
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-10-14 05:57:06.297
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-10-14 05:57:06.298
!MESSAGE A conflict occurred for CTRL+SHIFT+F11:
Binding(CTRL+SHIFT+F11,
	ParameterizedCommand(Command(org.eclipse.eclemma.ui.commands.CoverageLast,Coverage,
		Coverage,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7a696a6b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+F11,
	ParameterizedCommand(Command(org.eclipse.tcf.te.tcf.ui.toolbar.command.historyLast,Execute Last Action,
		,
		Category(org.eclipse.tcf.te.ui.commands.category,Target Explorer Commands,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@597050fa,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,win32,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-10-14 05:57:06.298
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7511e348,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@268bb09d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-10-14 05:57:06.298
!MESSAGE A conflict occurred for ALT+SHIFT+X S:
Binding(ALT+SHIFT+X S,
	ParameterizedCommand(Command(org.eclipse.reddeer.eclipse.ui.junitShortcut.run,RedDeer Test,
		RedDeer Test,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1780bc15,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+X S,
	ParameterizedCommand(Command(org.eclipse.swtbot.eclipse.ui.junitShortcut.run,SWTBot Test,
		SWTBot Test,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4c2cc99f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-10-14 05:57:06.298
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@36dd68f1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4da929ef,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-10-14 05:57:06.298
!MESSAGE A conflict occurred for ALT+SHIFT+D S:
Binding(ALT+SHIFT+D S,
	ParameterizedCommand(Command(org.eclipse.reddeer.eclipse.ui.junitShortcut.debug,RedDeer Test,
		RedDeer Test,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5fdb445b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+D S,
	ParameterizedCommand(Command(org.eclipse.swtbot.eclipse.ui.junitShortcut.debug,SWTBot Test,
		SWTBot Test,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@75910e0e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.core.runtime 4 0 2022-10-14 05:57:34.256
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:208)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:240)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:672)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:238)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:205)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jface 4 0 2022-10-14 05:57:34.259
!MESSAGE Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve(PlatformURLPluginConnection.java:73)
	at org.eclipse.core.internal.boot.PlatformURLHandler.openConnection(PlatformURLHandler.java:69)
	at org.eclipse.osgi.internal.url.URLStreamHandlerProxy.openConnection(URLStreamHandlerProxy.java:123)
	at java.base/java.net.URL.openConnection(URL.java:1094)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:34)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:263)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:244)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:672)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:238)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:205)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.core.runtime 4 0 2022-10-14 05:57:34.263
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:208)
	at org.eclipse.jface.resource.URLImageDescriptor.getStream(URLImageDescriptor.java:167)
	at org.eclipse.jface.resource.URLImageDescriptor.getImageData(URLImageDescriptor.java:135)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageDataProvider.getImageData(URLImageDescriptor.java:78)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImageDataAtZoom(DPIUtil.java:404)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:717)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:283)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:238)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:205)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jface 2 0 2022-10-14 05:57:34.286
!MESSAGE The image could not be loaded: URLImageDescriptor(platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png)
!STACK 0
org.eclipse.jface.resource.DeviceResourceException: Unable to create resource URLImageDescriptor(platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:232)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:238)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:205)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.core.runtime 4 0 2022-10-14 05:57:43.927
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:208)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:240)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:672)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:290)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:268)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.getImage(TrimStack.java:816)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.updateTrimStackItems(TrimStack.java:881)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.createWidget(TrimStack.java:636)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:344)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:227)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:94)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:37)
	at org.eclipse.e4.ui.workbench.renderers.swt.ToolControlRenderer.createWidget(ToolControlRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.TrimBarRenderer.processContents(TrimBarRenderer.java:109)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jface 4 0 2022-10-14 05:57:43.930
!MESSAGE Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve(PlatformURLPluginConnection.java:73)
	at org.eclipse.core.internal.boot.PlatformURLHandler.openConnection(PlatformURLHandler.java:69)
	at org.eclipse.osgi.internal.url.URLStreamHandlerProxy.openConnection(URLStreamHandlerProxy.java:123)
	at java.base/java.net.URL.openConnection(URL.java:1094)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:34)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:263)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:244)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:672)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:290)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:268)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.getImage(TrimStack.java:816)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.updateTrimStackItems(TrimStack.java:881)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.createWidget(TrimStack.java:636)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:344)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:227)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:94)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:37)
	at org.eclipse.e4.ui.workbench.renderers.swt.ToolControlRenderer.createWidget(ToolControlRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.TrimBarRenderer.processContents(TrimBarRenderer.java:109)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.core.runtime 4 0 2022-10-14 05:57:43.934
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:208)
	at org.eclipse.jface.resource.URLImageDescriptor.getStream(URLImageDescriptor.java:167)
	at org.eclipse.jface.resource.URLImageDescriptor.getImageData(URLImageDescriptor.java:135)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageDataProvider.getImageData(URLImageDescriptor.java:78)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImageDataAtZoom(DPIUtil.java:404)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:717)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:283)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:290)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:268)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.getImage(TrimStack.java:816)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.updateTrimStackItems(TrimStack.java:881)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.createWidget(TrimStack.java:636)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:344)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:227)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:94)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:37)
	at org.eclipse.e4.ui.workbench.renderers.swt.ToolControlRenderer.createWidget(ToolControlRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.TrimBarRenderer.processContents(TrimBarRenderer.java:109)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.egit.ui 2 0 2022-10-14 05:57:47.496
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Intelso'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jst.jsp.core 4 4 2022-10-14 05:58:21.746
!MESSAGE A workspace crash was detected. The previous session did not exit normally. Not using saved taglib indexes.

!ENTRY org.eclipse.ui 2 2 2022-10-14 06:01:00.817
!MESSAGE Invalid property category path: org.eclipse.rcptt.ui.views.IntegrationsPropertiesPage (bundle: org.eclipse.rcptt.zephyr.ui, propertyPage: org.eclipse.rcptt.zephyr.ZephyrPropertiesPage)

!ENTRY org.eclipse.jdt.core 4 4 2022-10-14 06:01:24.293
!MESSAGE Error occurred while deleting: /superbet/WebContent/WEB-INF/classes/modele
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:784)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:65)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:273)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:188)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1024)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:161)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:255)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete '/superbet/WebContent/WEB-INF/classes/modele'.
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:367)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:65)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:273)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:188)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1024)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:161)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:255)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Problems encountered while deleting files.
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\modele\ControlDisplayKeno.class.
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\modele\ControlDisplayKeno.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:65)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:273)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:188)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1024)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:161)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:255)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\modele.
!SUBENTRY 1 org.eclipse.core.resources 4 273 2022-10-14 06:01:24.295
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 2 org.eclipse.core.resources 4 273 2022-10-14 06:01:24.295
!MESSAGE Could not delete '/superbet/WebContent/WEB-INF/classes/modele'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:367)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:65)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:273)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:188)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1024)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:161)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:255)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Problems encountered while deleting files.
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\modele\ControlDisplayKeno.class.
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\modele\ControlDisplayKeno.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:65)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:273)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:188)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1024)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:161)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:255)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\modele.
!SUBENTRY 3 org.eclipse.core.resources 4 273 2022-10-14 06:01:24.296
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 4 org.eclipse.core.filesystem 4 273 2022-10-14 06:01:24.296
!MESSAGE Problems encountered while deleting files.
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2022-10-14 06:01:24.296
!MESSAGE Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\modele\ControlDisplayKeno.class.
!STACK 0
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\modele\ControlDisplayKeno.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:65)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:273)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:188)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1024)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:161)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:255)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2022-10-14 06:01:24.297
!MESSAGE Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\modele.

!ENTRY org.eclipse.jdt.core 4 4 2022-10-14 06:01:24.349
!MESSAGE Error occurred while deleting: /superbet/WebContent/WEB-INF/classes/servlets
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:784)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:65)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:273)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:188)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1024)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:161)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:255)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete '/superbet/WebContent/WEB-INF/classes/servlets'.
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:367)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:65)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:273)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:188)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1024)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:161)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:255)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Problems encountered while deleting files.
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\RetrieveSumOdd.class.
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\RetrieveSumOdd.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:65)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:273)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:188)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1024)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:161)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:255)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets.
!SUBENTRY 1 org.eclipse.core.resources 4 273 2022-10-14 06:01:24.349
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 2 org.eclipse.core.resources 4 273 2022-10-14 06:01:24.349
!MESSAGE Could not delete '/superbet/WebContent/WEB-INF/classes/servlets'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:367)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:65)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:273)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:188)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1024)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:161)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:255)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Problems encountered while deleting files.
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\RetrieveSumOdd.class.
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\RetrieveSumOdd.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:65)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:273)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:188)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1024)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:161)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:255)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets.
!SUBENTRY 3 org.eclipse.core.resources 4 273 2022-10-14 06:01:24.350
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 4 org.eclipse.core.filesystem 4 273 2022-10-14 06:01:24.350
!MESSAGE Problems encountered while deleting files.
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2022-10-14 06:01:24.350
!MESSAGE Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\RetrieveSumOdd.class.
!STACK 0
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\RetrieveSumOdd.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:65)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:273)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:188)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1024)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:161)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:255)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2022-10-14 06:01:24.351
!MESSAGE Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets.

!ENTRY org.eclipse.lsp4e 4 0 2022-10-14 06:37:02.632
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.operations.hover.LSPTextHover.getHoverRegion(LSPTextHover.java:150)
	at org.eclipse.ui.internal.genericeditor.hover.CompositeTextHover.getHoverRegion(CompositeTextHover.java:101)
	at org.eclipse.jface.text.TextViewerHoverManager.computeInformation(TextViewerHoverManager.java:128)
	at org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:1101)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager$MouseTracker.mouseHover(AbstractHoverInformationControlManager.java:511)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:212)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.lsp4e 1 0 2022-10-14 06:37:03.931
!MESSAGE [Info]	ESLint server running in node v16.14.2

!ENTRY org.eclipse.lsp4e 4 0 2022-10-14 06:37:03.958
!MESSAGE InterruptedException
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.operations.hover.LSPTextHover.getHoverInfo(LSPTextHover.java:73)
	at org.eclipse.ui.internal.genericeditor.hover.CompositeTextHover.getHoverInfo2(CompositeTextHover.java:60)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 1 0 2022-10-14 06:37:31.074
!MESSAGE [Info]	[lspserver] Using Typescript version (bundled) 4.6.4 from path "C:\Users\Intelso\.p2\pool\plugins\org.eclipse.wildwebdeveloper_0.5.22.202205250019\node_modules\typescript\lib\tsserver.js"

!ENTRY org.eclipse.jst.server.tomcat.core 4 0 2022-10-16 15:56:37.563
!MESSAGE Could not publish server configuration for Tomcat v7.0 Server at localhost.
!SUBENTRY 1 org.eclipse.jst.server.tomcat.core 4 0 2022-10-16 15:56:37.563
!MESSAGE Multiple Contexts have a path of "/superbet".

!ENTRY org.eclipse.jst.server.tomcat.core 4 0 2022-10-16 15:57:03.436
!MESSAGE Could not publish server configuration for Tomcat v7.0 Server at localhost.
!SUBENTRY 1 org.eclipse.jst.server.tomcat.core 4 0 2022-10-16 15:57:03.436
!MESSAGE Multiple Contexts have a path of "/superbet".

!ENTRY org.eclipse.wildwebdeveloper.xml 4 0 2022-10-16 15:57:41.887
!MESSAGE Error while getting URI 'platform:/plugin/org.eclipse.persistence.moxy/org/eclipse/persistence/jaxb/eclipselink_oxm_2_5.xsd' from plugin 'org.eclipse.jpt.common.eclipselink.core' : /org/eclipse/persistence/jaxb/eclipselink_oxm_2_5.xsd
!STACK 0
java.io.FileNotFoundException: /org/eclipse/persistence/jaxb/eclipselink_oxm_2_5.xsd
	at org.eclipse.osgi.storage.url.bundleentry.Handler.findBundleEntry(Handler.java:55)
	at org.eclipse.osgi.storage.url.BundleResourceHandler.openConnection(BundleResourceHandler.java:182)
	at java.base/java.net.URL.openConnection(URL.java:1094)
	at org.eclipse.core.internal.boot.PlatformURLConnection.connect(PlatformURLConnection.java:115)
	at org.eclipse.core.internal.boot.PlatformURLConnection.getURLAsLocal(PlatformURLConnection.java:240)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:37)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:263)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.createURI(XMLCatalogs.java:139)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.lambda$3(XMLCatalogs.java:87)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.getWTPExtensionCatalog(XMLCatalogs.java:65)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.getAllCatalogs(XMLCatalogs.java:52)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLPreferenceConstants.storePreferencesToLemminxOptions(XMLPreferenceConstants.java:90)
	at org.eclipse.wildwebdeveloper.xml.internal.XMLLanguageServer.mergeCustomInitializationOptions(XMLLanguageServer.java:169)
	at org.eclipse.wildwebdeveloper.xml.internal.XMLLanguageServer.getInitializationOptions(XMLLanguageServer.java:164)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$7(LanguageServerWrapper.java:364)
	at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1150)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1773)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 4 0 2022-10-17 11:34:37.869
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy16/jdk.proxy16.$Proxy63.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.ui 4 0 2022-10-17 22:19:13.965
!MESSAGE The proxied handler for 'org.eclipse.fx.ide.jdt.ui.internal.handler.AddFXBeanGetterSetterHandler' could not be loaded
!STACK 1
org.eclipse.core.runtime.CoreException: Plug-in "org.eclipse.fx.ide.jdt.ui" was unable to instantiate class "org.eclipse.fx.ide.jdt.ui.internal.handler.AddFXBeanGetterSetterHandler".
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.throwException(RegistryStrategyOSGI.java:212)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:206)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:920)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:246)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:63)
	at org.eclipse.ui.internal.handlers.HandlerProxy.loadHandler(HandlerProxy.java:342)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:227)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.canExecute(HandlerServiceImpl.java:179)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:220)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5143)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4775)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1480)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2286)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4109)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3639)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: java.lang.NoClassDefFoundError: org/eclipse/jdt/internal/corext/ValidateEditException
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3373)
	at java.base/java.lang.Class.getConstructor0(Class.java:3578)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2754)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:204)
	... 59 more
Caused by: java.lang.ClassNotFoundException: org.eclipse.jdt.internal.corext.ValidateEditException cannot be found by org.eclipse.fx.ide.jdt.ui_3.0.0.201705220750
	at org.eclipse.osgi.internal.loader.BundleLoader.generateException(BundleLoader.java:541)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:536)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	... 64 more
!SUBENTRY 1 org.eclipse.equinox.registry 4 1 2022-10-17 22:19:13.972
!MESSAGE Plug-in "org.eclipse.fx.ide.jdt.ui" was unable to instantiate class "org.eclipse.fx.ide.jdt.ui.internal.handler.AddFXBeanGetterSetterHandler".
!STACK 0
java.lang.NoClassDefFoundError: org/eclipse/jdt/internal/corext/ValidateEditException
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3373)
	at java.base/java.lang.Class.getConstructor0(Class.java:3578)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2754)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:204)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:920)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:246)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:63)
	at org.eclipse.ui.internal.handlers.HandlerProxy.loadHandler(HandlerProxy.java:342)
	at org.eclipse.ui.internal.handlers.HandlerProxy.setEnabled(HandlerProxy.java:227)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.setEnabled(E4HandlerProxy.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.setEnabled(HandlerServiceHandler.java:84)
	at org.eclipse.core.commands.Command.setEnabled(Command.java:856)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.canExecute(HandlerServiceImpl.java:179)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:220)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5143)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4775)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1480)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2286)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4109)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3639)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: java.lang.ClassNotFoundException: org.eclipse.jdt.internal.corext.ValidateEditException cannot be found by org.eclipse.fx.ide.jdt.ui_3.0.0.201705220750
	at org.eclipse.osgi.internal.loader.BundleLoader.generateException(BundleLoader.java:541)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:536)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:416)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	... 64 more

!ENTRY org.eclipse.core.runtime 4 0 2022-10-25 07:20:49.220
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:208)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:240)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:672)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:290)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:268)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.getImage(TrimStack.java:816)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.updateTrimStackItems(TrimStack.java:881)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.createWidget(TrimStack.java:636)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:344)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:227)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:94)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:37)
	at org.eclipse.e4.ui.workbench.renderers.swt.ToolControlRenderer.createWidget(ToolControlRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.subscribeTopicToBeRendered(PartRenderingEngine.java:161)
	at jdk.internal.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$DIEventHandler.handleEvent(EventObjectSupplier.java:92)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setToBeRendered(UIElementImpl.java:314)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.createTrim(MinMaxAddon.java:1057)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.minimize(MinMaxAddon.java:665)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.subscribeTopicTagsChanged(MinMaxAddon.java:406)
	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4790)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.emf.ecore.util.EcoreEList.dispatchNotification(EcoreEList.java:249)
	at org.eclipse.emf.common.notify.impl.NotifyingListImpl.addUnique(NotifyingListImpl.java:304)
	at org.eclipse.emf.common.util.AbstractEList.add(AbstractEList.java:304)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.setState(MinMaxAddon.java:209)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon$1.minimize(MinMaxAddon.java:129)
	at org.eclipse.swt.custom.CTabFolder.onSelection(CTabFolder.java:2171)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:340)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jface 4 0 2022-10-25 07:20:49.269
!MESSAGE Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve(PlatformURLPluginConnection.java:73)
	at org.eclipse.core.internal.boot.PlatformURLHandler.openConnection(PlatformURLHandler.java:69)
	at org.eclipse.osgi.internal.url.URLStreamHandlerProxy.openConnection(URLStreamHandlerProxy.java:123)
	at java.base/java.net.URL.openConnection(URL.java:1094)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:34)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:263)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:244)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:672)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:290)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:268)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.getImage(TrimStack.java:816)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.updateTrimStackItems(TrimStack.java:881)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.createWidget(TrimStack.java:636)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:344)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:227)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:94)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:37)
	at org.eclipse.e4.ui.workbench.renderers.swt.ToolControlRenderer.createWidget(ToolControlRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.subscribeTopicToBeRendered(PartRenderingEngine.java:161)
	at jdk.internal.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$DIEventHandler.handleEvent(EventObjectSupplier.java:92)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setToBeRendered(UIElementImpl.java:314)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.createTrim(MinMaxAddon.java:1057)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.minimize(MinMaxAddon.java:665)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.subscribeTopicTagsChanged(MinMaxAddon.java:406)
	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4790)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.emf.ecore.util.EcoreEList.dispatchNotification(EcoreEList.java:249)
	at org.eclipse.emf.common.notify.impl.NotifyingListImpl.addUnique(NotifyingListImpl.java:304)
	at org.eclipse.emf.common.util.AbstractEList.add(AbstractEList.java:304)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.setState(MinMaxAddon.java:209)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon$1.minimize(MinMaxAddon.java:129)
	at org.eclipse.swt.custom.CTabFolder.onSelection(CTabFolder.java:2171)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:340)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.core.runtime 4 0 2022-10-25 07:20:49.270
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:208)
	at org.eclipse.jface.resource.URLImageDescriptor.getStream(URLImageDescriptor.java:167)
	at org.eclipse.jface.resource.URLImageDescriptor.getImageData(URLImageDescriptor.java:135)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageDataProvider.getImageData(URLImageDescriptor.java:78)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImageDataAtZoom(DPIUtil.java:404)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:717)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:283)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:290)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:268)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.getImage(TrimStack.java:816)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.updateTrimStackItems(TrimStack.java:881)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.createWidget(TrimStack.java:636)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:344)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:227)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:94)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:37)
	at org.eclipse.e4.ui.workbench.renderers.swt.ToolControlRenderer.createWidget(ToolControlRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.subscribeTopicToBeRendered(PartRenderingEngine.java:161)
	at jdk.internal.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$DIEventHandler.handleEvent(EventObjectSupplier.java:92)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setToBeRendered(UIElementImpl.java:314)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.createTrim(MinMaxAddon.java:1057)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.minimize(MinMaxAddon.java:665)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.subscribeTopicTagsChanged(MinMaxAddon.java:406)
	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4790)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.emf.ecore.util.EcoreEList.dispatchNotification(EcoreEList.java:249)
	at org.eclipse.emf.common.notify.impl.NotifyingListImpl.addUnique(NotifyingListImpl.java:304)
	at org.eclipse.emf.common.util.AbstractEList.add(AbstractEList.java:304)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.setState(MinMaxAddon.java:209)
	at org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon$1.minimize(MinMaxAddon.java:129)
	at org.eclipse.swt.custom.CTabFolder.onSelection(CTabFolder.java:2171)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:340)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:28:53.415
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/efxclipse/updates-released/3.0.0/site, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:03.681
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:06.876
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.11.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:10.884
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.11.0.r201704240320, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:12.733
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.12.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:14.349
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.12.0.r201709030044, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:16.662
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.13.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:22.292
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.13.1.r201712040202, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:24.175
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.13.1.r201712040515, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:26.244
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.14.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:30.101
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.14.2.r201802161450, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:32.933
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.14.3, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:38.167
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.14.3.r201802240500, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:40.264
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.0.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:45.085
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.0.0.r201908191551, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:47.449
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.1.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:55.693
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.1.0.r202001120626, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:29:58.430
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.2.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:30:00.964
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.2.0.r202003151902, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:30:03.057
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.3.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:30:09.192
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.3.0.r202008060316, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:30:11.129
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.4.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:30:21.664
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.4.0.r202105021533, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:30:23.957
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.5.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:30:27.891
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.5.0.r202201070709, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:30:29.705
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.6.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:30:34.306
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.6.1.r202207070546, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:30:48.061
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/technology/m2e/releases/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:30:53.201
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/technology/m2e/releases/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:30:56.731
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/technology/m2e/releases/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.metadata.repository 4 1000 2022-11-10 12:31:08.393
!MESSAGE No repository found at http://download.eclipse.org/technology/m2e/releases/.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:31:45.841
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/12.2.1.9/photon/repository/dependencies/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:33:36.640
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/e4/snapshots/org.eclipse.e4.ui/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:33:44.358
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:33:53.078
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:33:57.116
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:34:05.999
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/release, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:34:10.992
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/release/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:34:13.882
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/release, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:34:21.743
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/release/1.2.2/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:34:29.939
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/release/1.2.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:34:38.917
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/release/1.2.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:34:46.775
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/release/1.1.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:34:54.656
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/milestone, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:35:01.017
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/milestone/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:35:03.935
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/milestone, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:35:13.400
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S911-1.2-RC1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:35:25.196
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S909-1.2-RC1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:35:34.280
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S908-1.2-RC1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:35:40.585
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20210519-025928-1.2.2-M1/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:35:45.383
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20210406-153234/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:35:50.137
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20191129-202804-1.2.1-RC2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:35:54.817
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20191118-183434-1.2.1-RC1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:35:59.385
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20170529-101518-1.1-RC2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:04.004
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20170525-115740-1.1-RC2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:08.847
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20170523-143239-1.1-RC1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:13.615
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20170516-113326-1.1-M7, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:18.339
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/nightly, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:21.286
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/nightly/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:22.729
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/nightly, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:27.254
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/nightly/N20221110-050447/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:31.818
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/nightly/N20221109-044131/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:37.388
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/nightly/N20221108-044153/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:44.683
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/nightly/N20221107-051144/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:50.614
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/nightly/N20221106-034119/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:56.579
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/oomph/uss/updates/latest, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:36:59.573
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/oomph/uss/updates/latest/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:37:01.026
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/oomph/uss/updates/latest, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:37:05.610
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/oomph/uss/drops/nightly/N20180202-232207, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:37:10.305
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/technology/m2e/releases/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:37:13.438
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/technology/m2e/releases/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-11-10 12:37:14.969
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/technology/m2e/releases/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.core.jobs 4 2 2022-11-10 12:37:37.102
!MESSAGE An internal error occurred during: "Automatic updates download".
!STACK 0
java.lang.IllegalStateException: Profile D__jee-2022-06_eclipse is not current. Expected timestamp 1661487055562 but was 1661487055562.
	at org.eclipse.equinox.internal.p2.engine.SimpleProfileRegistry.lockProfile(SimpleProfileRegistry.java:880)
	at org.eclipse.equinox.internal.p2.engine.Engine.perform(Engine.java:72)
	at org.eclipse.equinox.internal.p2.engine.Engine.perform(Engine.java:48)
	at org.eclipse.equinox.p2.operations.ProvisioningSession.performProvisioningPlan(ProvisioningSession.java:181)
	at org.eclipse.equinox.p2.operations.ProfileModificationJob.runModal(ProfileModificationJob.java:76)
	at org.eclipse.equinox.p2.operations.ProvisioningJob.run(ProvisioningJob.java:188)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.core.jobs 4 2 2022-11-10 12:37:37.103
!MESSAGE An internal error occurred during: "Automatic updates download".
!STACK 0
java.lang.IllegalStateException: Profile D__jee-2022-06_eclipse is not current. Expected timestamp 1661487055562 but was 1661487055562.
	at org.eclipse.equinox.internal.p2.engine.SimpleProfileRegistry.lockProfile(SimpleProfileRegistry.java:880)
	at org.eclipse.equinox.internal.p2.engine.Engine.perform(Engine.java:72)
	at org.eclipse.equinox.internal.p2.engine.Engine.perform(Engine.java:48)
	at org.eclipse.equinox.p2.operations.ProvisioningSession.performProvisioningPlan(ProvisioningSession.java:181)
	at org.eclipse.equinox.p2.operations.ProfileModificationJob.runModal(ProfileModificationJob.java:76)
	at org.eclipse.equinox.p2.operations.ProvisioningJob.run(ProvisioningJob.java:188)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2022-11-22 03:07:53.178 -----------------------------------------------
eclipse.buildId=4.24.0.I20220607-0700
java.version=17.0.4
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=fr_FR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.fx.core.guice 4 0 2022-11-22 03:12:19.341
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.fx.core.guice [908]
  Unresolved requirement: Import-Package: com.google.inject; version="[1.3.0,2.0.0)"

	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1847)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1840)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1781)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1745)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1667)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.fx.ide.css.cssext 4 0 2022-11-22 03:12:19.357
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.fx.ide.css.cssext [912]
  Unresolved requirement: Require-Bundle: org.eclipse.xtext.generator; resolution:="optional"
  Unresolved requirement: Require-Bundle: org.eclipse.fx.core.guice; bundle-version="2.3.0"
    -> Bundle-SymbolicName: org.eclipse.fx.core.guice; bundle-version="3.0.0.201705220600"
       org.eclipse.fx.core.guice [908]
         Unresolved requirement: Import-Package: com.google.inject; version="[1.3.0,2.0.0)"

	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1847)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1840)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1781)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1745)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1667)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.fx.ide.css.cssext.proposals 4 0 2022-11-22 03:12:19.358
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.fx.ide.css.cssext.proposals [913]
  Unresolved requirement: Import-Package: org.eclipse.fx.ide.css.ui.extapi
    -> Export-Package: org.eclipse.fx.ide.css.ui.extapi; bundle-symbolic-name="org.eclipse.fx.ide.css.ui"; bundle-version="3.0.0.201705220750"; version="0.0.0"; x-internal:="true"
       org.eclipse.fx.ide.css.ui [917]
         Unresolved requirement: Require-Bundle: org.eclipse.fx.core.guice; bundle-version="2.3.0"
           -> Bundle-SymbolicName: org.eclipse.fx.core.guice; bundle-version="3.0.0.201705220600"
              org.eclipse.fx.core.guice [908]
                Unresolved requirement: Import-Package: com.google.inject; version="[1.3.0,2.0.0)"
  Unresolved requirement: Require-Bundle: org.eclipse.fx.ide.css.cssext; bundle-version="2.3.0"
    -> Bundle-SymbolicName: org.eclipse.fx.ide.css.cssext; bundle-version="3.0.0.201705220750"; singleton:="true"
       org.eclipse.fx.ide.css.cssext [912]
         Unresolved requirement: Require-Bundle: org.eclipse.xtext.generator; resolution:="optional"
         Unresolved requirement: Require-Bundle: org.eclipse.fx.core.guice; bundle-version="2.3.0"
           -> Bundle-SymbolicName: org.eclipse.fx.core.guice; bundle-version="3.0.0.201705220600"

	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1847)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1840)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1781)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1745)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1667)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.fx.ide.css.cssext.ui 4 0 2022-11-22 03:12:19.361
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.fx.ide.css.cssext.ui [914]
  Unresolved requirement: Require-Bundle: org.eclipse.fx.ide.css.cssext; visibility:="reexport"
    -> Bundle-SymbolicName: org.eclipse.fx.ide.css.cssext; bundle-version="3.0.0.201705220750"; singleton:="true"
       org.eclipse.fx.ide.css.cssext [912]
         Unresolved requirement: Require-Bundle: org.eclipse.xtext.generator; resolution:="optional"
         Unresolved requirement: Require-Bundle: org.eclipse.fx.core.guice; bundle-version="2.3.0"
           -> Bundle-SymbolicName: org.eclipse.fx.core.guice; bundle-version="3.0.0.201705220600"
              org.eclipse.fx.core.guice [908]
                Unresolved requirement: Import-Package: com.google.inject; version="[1.3.0,2.0.0)"
  Unresolved requirement: Require-Bundle: org.eclipse.fx.core.guice; bundle-version="2.3.0"
    -> Bundle-SymbolicName: org.eclipse.fx.core.guice; bundle-version="3.0.0.201705220600"

	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1847)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1840)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1781)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1745)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1667)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.fx.ide.css.ui 4 0 2022-11-22 03:12:19.371
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.fx.ide.css.ui [917]
  Unresolved requirement: Require-Bundle: org.eclipse.fx.core.guice; bundle-version="2.3.0"
    -> Bundle-SymbolicName: org.eclipse.fx.core.guice; bundle-version="3.0.0.201705220600"
       org.eclipse.fx.core.guice [908]
         Unresolved requirement: Import-Package: com.google.inject; version="[1.3.0,2.0.0)"

	at org.eclipse.osgi.container.Module.start(Module.java:463)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1847)
	at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1840)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1781)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1745)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1667)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)

!ENTRY org.eclipse.core.resources 2 10035 2022-11-22 03:12:37.135
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-11-22 03:12:59.753
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-11-22 03:12:59.753
!MESSAGE A conflict occurred for CTRL+SHIFT+F11:
Binding(CTRL+SHIFT+F11,
	ParameterizedCommand(Command(org.eclipse.eclemma.ui.commands.CoverageLast,Coverage,
		Coverage,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c67726,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+F11,
	ParameterizedCommand(Command(org.eclipse.tcf.te.tcf.ui.toolbar.command.historyLast,Execute Last Action,
		,
		Category(org.eclipse.tcf.te.ui.commands.category,Target Explorer Commands,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6e12d8be,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,win32,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-11-22 03:12:59.754
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1fc892c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@b4010be,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-11-22 03:12:59.754
!MESSAGE A conflict occurred for CTRL+L:
Binding(CTRL+L,
	ParameterizedCommand(Command(org.eclipse.rcptt.ui.actions.goto.line,Goto Line,
		,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1e2a39b7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+L,
	ParameterizedCommand(Command(org.fusesource.ide.camel.editor.commands.autoLayoutCommand,Auto Layout Diagram,
		,
		Category(org.fusesource.ide.camel.editor.commands.category,Red Hat Fuse Camel Editor Commands,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6685d5e4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-11-22 03:12:59.754
!MESSAGE A conflict occurred for ALT+SHIFT+X S:
Binding(ALT+SHIFT+X S,
	ParameterizedCommand(Command(org.eclipse.reddeer.eclipse.ui.junitShortcut.run,RedDeer Test,
		RedDeer Test,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35595f1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+X S,
	ParameterizedCommand(Command(org.eclipse.swtbot.eclipse.ui.junitShortcut.run,SWTBot Test,
		SWTBot Test,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@81ba0c5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-11-22 03:12:59.754
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4733c7f0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@fd10007,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-11-22 03:12:59.754
!MESSAGE A conflict occurred for ALT+SHIFT+D S:
Binding(ALT+SHIFT+D S,
	ParameterizedCommand(Command(org.eclipse.reddeer.eclipse.ui.junitShortcut.debug,RedDeer Test,
		RedDeer Test,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2004e611,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+D S,
	ParameterizedCommand(Command(org.eclipse.swtbot.eclipse.ui.junitShortcut.debug,SWTBot Test,
		SWTBot Test,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@75cc775c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.jdt.ls.core 1 0 2022-11-22 03:13:47.673
!MESSAGE class org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin is started

!ENTRY org.eclipse.core.runtime 4 0 2022-11-22 03:13:57.441
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:208)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:240)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:672)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:238)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:205)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jface 4 0 2022-11-22 03:13:57.443
!MESSAGE Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve(PlatformURLPluginConnection.java:73)
	at org.eclipse.core.internal.boot.PlatformURLHandler.openConnection(PlatformURLHandler.java:69)
	at org.eclipse.osgi.internal.url.URLStreamHandlerProxy.openConnection(URLStreamHandlerProxy.java:123)
	at java.base/java.net.URL.openConnection(URL.java:1094)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:34)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:263)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:244)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:672)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:238)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:205)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.core.runtime 4 0 2022-11-22 03:13:57.446
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:208)
	at org.eclipse.jface.resource.URLImageDescriptor.getStream(URLImageDescriptor.java:167)
	at org.eclipse.jface.resource.URLImageDescriptor.getImageData(URLImageDescriptor.java:135)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageDataProvider.getImageData(URLImageDescriptor.java:78)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImageDataAtZoom(DPIUtil.java:404)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:717)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:283)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:238)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:205)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jface 2 0 2022-11-22 03:13:57.449
!MESSAGE The image could not be loaded: URLImageDescriptor(platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png)
!STACK 0
org.eclipse.jface.resource.DeviceResourceException: Unable to create resource URLImageDescriptor(platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:232)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:228)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:238)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:794)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:205)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.core.runtime 4 0 2022-11-22 03:14:10.222
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:208)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:240)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:672)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:290)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:268)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.getImage(TrimStack.java:816)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.updateTrimStackItems(TrimStack.java:881)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.createWidget(TrimStack.java:636)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:344)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:227)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:94)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:37)
	at org.eclipse.e4.ui.workbench.renderers.swt.ToolControlRenderer.createWidget(ToolControlRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.TrimBarRenderer.processContents(TrimBarRenderer.java:109)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jface 4 0 2022-11-22 03:14:10.225
!MESSAGE Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve(PlatformURLPluginConnection.java:73)
	at org.eclipse.core.internal.boot.PlatformURLHandler.openConnection(PlatformURLHandler.java:69)
	at org.eclipse.osgi.internal.url.URLStreamHandlerProxy.openConnection(URLStreamHandlerProxy.java:123)
	at java.base/java.net.URL.openConnection(URL.java:1094)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:34)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:263)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:244)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:58)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:672)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:290)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:268)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.getImage(TrimStack.java:816)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.updateTrimStackItems(TrimStack.java:881)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.createWidget(TrimStack.java:636)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:344)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:227)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:94)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:37)
	at org.eclipse.e4.ui.workbench.renderers.swt.ToolControlRenderer.createWidget(ToolControlRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.TrimBarRenderer.processContents(TrimBarRenderer.java:109)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.core.runtime 4 0 2022-11-22 03:14:10.227
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:208)
	at org.eclipse.jface.resource.URLImageDescriptor.getStream(URLImageDescriptor.java:167)
	at org.eclipse.jface.resource.URLImageDescriptor.getImageData(URLImageDescriptor.java:135)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageDataProvider.getImageData(URLImageDescriptor.java:78)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImageDataAtZoom(DPIUtil.java:404)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:717)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:283)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:290)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:268)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.getImage(TrimStack.java:816)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.updateTrimStackItems(TrimStack.java:881)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.createWidget(TrimStack.java:636)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:344)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:227)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:94)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:37)
	at org.eclipse.e4.ui.workbench.renderers.swt.ToolControlRenderer.createWidget(ToolControlRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.TrimBarRenderer.processContents(TrimBarRenderer.java:109)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.egit.ui 2 0 2022-11-22 03:14:12.820
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Intelso'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.rcptt.launching 4 0 2022-11-22 03:14:36.218
!MESSAGE Failed to clean RCPTT runtime from bundle pool.
!SUBENTRY 1 org.eclipse.equinox.p2.artifact.repository 4 1001 2022-11-22 03:14:36.218
!MESSAGE Repository already exists at file:/D:/projets_JC/superbet/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/.

!ENTRY org.jboss.tools.discovery.core 4 0 2022-11-22 03:14:43.245
!MESSAGE All attempts to discover connectors have failed
!SUBENTRY 1 org.eclipse.equinox.p2.discovery 4 0 2022-11-22 03:14:43.245
!MESSAGE Failed to get connectors from CachedProxyWizardDiscoveryStrategy
!STACK 0
java.lang.NumberFormatException: For input string: ""
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:678)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at org.eclipse.osgi.storagemanager.StorageManager.updateTable(StorageManager.java:526)
	at org.eclipse.osgi.storagemanager.StorageManager.open(StorageManager.java:723)
	at org.eclipse.core.internal.registry.ExtensionRegistry.setFileManager(ExtensionRegistry.java:114)
	at org.eclipse.core.internal.registry.ExtensionRegistry.checkCache(ExtensionRegistry.java:903)
	at org.eclipse.core.internal.registry.ExtensionRegistry.<init>(ExtensionRegistry.java:692)
	at org.jboss.tools.discovery.core.internal.connectors.xpl.ExternalBundleDiscoveryStrategy.performDiscovery(ExternalBundleDiscoveryStrategy.java:126)
	at org.jboss.tools.discovery.core.internal.connectors.ChainedDiscoveryStrategy.performDiscovery(ChainedDiscoveryStrategy.java:69)
	at org.eclipse.equinox.internal.p2.discovery.Catalog.performDiscovery(Catalog.java:88)
	at org.jboss.tools.central.internal.discovery.wizards.ProxyWizardManager.loadWizards(ProxyWizardManager.java:107)
	at org.jboss.tools.central.internal.discovery.wizards.ProxyWizardManager.getProxyWizards(ProxyWizardManager.java:132)
	at org.jboss.tools.central.editors.GettingStartedHtmlPage$5$2.run(GettingStartedHtmlPage.java:272)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.ui 2 2 2022-11-22 05:09:52.274
!MESSAGE Invalid property category path: org.eclipse.rcptt.ui.views.IntegrationsPropertiesPage (bundle: org.eclipse.rcptt.zephyr.ui, propertyPage: org.eclipse.rcptt.zephyr.ZephyrPropertiesPage)

!ENTRY org.eclipse.jst.jsp.core 4 4 2022-11-22 05:24:10.375
!MESSAGE A workspace crash was detected. The previous session did not exit normally. Not using saved taglib indexes.

!ENTRY org.eclipse.lsp4e 4 0 2022-11-22 05:24:36.560
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.LanguageServerWrapper.supportsWorkspaceFolderCapability(LanguageServerWrapper.java:560)
	at org.eclipse.lsp4e.LanguageServerWrapper.watchProjects(LanguageServerWrapper.java:522)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$11(LanguageServerWrapper.java:379)
	at java.base/java.util.concurrent.CompletableFuture$UniRun.tryFire(CompletableFuture.java:787)
	at java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:483)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
