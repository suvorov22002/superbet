!SESSION 2023-07-23 15:34:09.192 -----------------------------------------------
eclipse.buildId=4.24.0.I20220607-0700
java.version=17.0.4
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=fr_FR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file D:\projets_JC\superbet\.metadata\.bak_0.log
Created Time: 2023-07-23 23:37:21.709

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-23 23:37:21.710
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-23 23:37:21.712
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-23 23:37:23.167
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.CagnotteDto;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	private List<Partner> lpartner;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		supergameAPI = SuperGameDAOAPI.getInstance();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
		    lpartner = partnerDao.getAllPartners();
		   
			
			if(StringUtils.isBlank(coderace)){
				return;
			}
			
			String[] spaceCoderace = coderace.trim().split(" ");
			
			if(coderace.length() < 5){
				
	  		  	setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  	resultat = "Nom très court, 5 caractères minimum";
	  		  	return;
	  		  	
			}
			else if(spaceCoderace.length > 1) {
				
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le nom du partenaire");
				resultat = "Pas d'espace dans le nom du partenaire.";
		  		return;
		  		
			}
			
			 Partner partn = partnerDao.find(coderace);
			 
			 if(partn == null) {
				 
				 Partner part = new Partner();
				 part.setCoderace(coderace);
				 part.setZone(zone);
				 part.setGroupe(1);
				 part.setActif(1);
				 part.setCob("opened");
				 boolean isAdded = addNewPartenaire(part);
				 
				 if(isAdded) {
					 
					 PartnerDto pdto = new PartnerDto();
					 pdto.setCoderace(coderace);
					 pdto.setZone(zone);
					 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
					 
				 }
				 
			 }
			
			
		
			//Partner partner = partnerDao.find(coderace);
			
			 PartnerDto pdto = new PartnerDto();
			 pdto.setCoderace(coderace);
			 pdto.setZone(zone);
			 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			 Partner p = resp.getPartner();
			 String respMess = resp.getMessage();

			 Partner part = new Partner();
			 part.setCoderace(coderace);
			 part.setZone(zone);
			 part.setGroupe(1);
			 part.setActif(1);
			 part.setCob("opened");

			 if ("EXISTS".equalsIgnoreCase(respMess)) {

				 Partner partner = partnerDao.find(coderace);

				 if (partner == null) {
					 addNewPartenaire(part);
				 }
				 else {
					 setErreurs(FIELD_CODERACE, "present");
					 resultat = "Partenaire/Salle deja présent.";
				 }

			 }
			 else if("NEW".equalsIgnoreCase(respMess)) {
				 addNewPartenaire(part);
			 }

		 } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
			 // TODO Auto-generated catch block
			 e.printStackTrace();
		 }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(StringUtils.isBlank(login) || StringUtils.isBlank(pass) || StringUtils.isBlank(profil) || StringUtils.isBlank(partner)){
				return;
			}
			
			String[] spaceLogin = login.trim().split(" ");
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			else if(spaceLogin.length > 1) {
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le login");
		  		resultat_u = "Pas d'espace dans le login.";
		  		return;
			}
			
			
			if(pass.length() < 6){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", "******");
			
			if(caissier == null){
				
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				
				try {
					
					if (n > 0) {
						// Utilisateur crée en local
						
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(pass);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						Caissier caisse = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						if(caisse == null) {
							
							caissierDao.delete(cais);
							setErreurs_u(FIELD_LOGIN, "Echec lors de la creation");
							resultat_u = "Echec lors de la creation.";
							return;
						}
						
						resultat_u="Caissier crée avec succes";
						
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				
//				if(n > 0){	
//					Caissier user = caissierDao.findByLogin(login);
//					//creation de la ligne des mouvements
//					airtimeDao.createMvt(user.getIdCaissier(), 0);
//					resultat_u="Caissier crée avec succes";
//					return;
//				}
//				else{
//					setErreurs_u(FIELD_LOGIN, "Echec de creation");
//					resultat_u = "Echec de creation";
//					return;
//				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					//return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			
			String detail_lot = "";
			CagnotteDto cagnotte = new CagnotteDto();
			
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
			System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setHeur(dat1 + " " + heur);
			cagnotte.setJeu("");
			
			
			try {
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
				resultat_c = "Cagnotte mis à  jour";
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private boolean addNewPartenaire(Partner part) {
		
		int nb_race;
		Long n = 0L;
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			nb_race = kenoDao.create(ken);
			
			//misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return Boolean.FALSE;
			}
			
			for (Partner pp : lpartner) {
				pp.setActif(0);
				pp.setCob("closed");
				partnerDao.update(pp);
			}
		}
		else {
			setErreurs(FIELD_CODERACE, "Echec de creation");
			resultat = "Echec de creation";
			return Boolean.FALSE;
		}
		
		return Boolean.TRUE;
	}		
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-23 23:37:23.169
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-23 23:37:23.170
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-23 23:37:23.227
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.CagnotteDto;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	private List<Partner> lpartner;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		supergameAPI = SuperGameDAOAPI.getInstance();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
		    lpartner = partnerDao.getAllPartners();
		   
			
			if(StringUtils.isBlank(coderace)){
				return;
			}
			
			String[] spaceCoderace = coderace.trim().split(" ");
			
			if(coderace.length() < 5){
				
	  		  	setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  	resultat = "Nom très court, 5 caractères minimum";
	  		  	return;
	  		  	
			}
			else if(spaceCoderace.length > 1) {
				
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le nom du partenaire");
				resultat = "Pas d'espace dans le nom du partenaire.";
		  		return;
		  		
			}
			
			 Partner partn = partnerDao.find(coderace);
			 
			 if(partn == null) {
				 
				 Partner part = new Partner();
				 part.setCoderace(coderace);
				 part.setZone(zone);
				 part.setGroupe(1);
				 part.setActif(1);
				 part.setCob("opened");
				 boolean isAdded = addNewPartenaire(part);
				 
				 if(isAdded) {
					 
					 PartnerDto pdto = new PartnerDto();
					 pdto.setCoderace(coderace);
					 pdto.setZone(zone);
					 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
					 
				 }
				 
			 }
			
			
		
			//Partner partner = partnerDao.find(coderace);
			
			 PartnerDto pdto = new PartnerDto();
			 pdto.setCoderace(coderace);
			 pdto.setZone(zone);
			 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			 Partner p = resp.getPartner();
			 String respMess = resp.getMessage();

			 Partner part = new Partner();
			 part.setCoderace(coderace);
			 part.setZone(zone);
			 part.setGroupe(1);
			 part.setActif(1);
			 part.setCob("opened");

			 if ("EXISTS".equalsIgnoreCase(respMess)) {

				 Partner partner = partnerDao.find(coderace);

				 if (partner == null) {
					 addNewPartenaire(part);
				 }
				 else {
					 setErreurs(FIELD_CODERACE, "present");
					 resultat = "Partenaire/Salle deja présent.";
				 }

			 }
			 else if("NEW".equalsIgnoreCase(respMess)) {
				 addNewPartenaire(part);
			 }

		 } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
			 // TODO Auto-generated catch block
			 e.printStackTrace();
		 }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(StringUtils.isBlank(login) || StringUtils.isBlank(pass) || StringUtils.isBlank(profil) || StringUtils.isBlank(partner)){
				return;
			}
			
			String[] spaceLogin = login.trim().split(" ");
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			else if(spaceLogin.length > 1) {
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le login");
		  		resultat_u = "Pas d'espace dans le login.";
		  		return;
			}
			
			
			if(pass.length() < 6){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", "******");
			
			if(caissier == null){
				
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				
				try {
					
					if (n > 0) {
						// Utilisateur crée en local
						
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(pass);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						Caissier caisse = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						if(caisse == null) {
							
							caissierDao.delete(cais);
							setErreurs_u(FIELD_LOGIN, "Echec lors de la creation");
							resultat_u = "Echec lors de la creation.";
							return;
						}
						
						resultat_u="Caissier crée avec succes";
						
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				
//				if(n > 0){	
//					Caissier user = caissierDao.findByLogin(login);
//					//creation de la ligne des mouvements
//					airtimeDao.createMvt(user.getIdCaissier(), 0);
//					resultat_u="Caissier crée avec succes";
//					return;
//				}
//				else{
//					setErreurs_u(FIELD_LOGIN, "Echec de creation");
//					resultat_u = "Echec de creation";
//					return;
//				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					//return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			
			String detail_lot = "";
			CagnotteDto cagnotte = new CagnotteDto();
			
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
			System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setHeur(dat1 + " " + heur);
			cagnotte.setJeu("");
			
			
			try {
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
				resultat_c = "Cagnotte mis à  jour";
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private boolean addNewPartenaire(Partner part) {
		
		int nb_race;
		Long n = 0L;
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			nb_race = kenoDao.create(ken);
			
			//misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return Boolean.FALSE;
			}
			
			for (Partner pp : lpartner) {
				pp.setActif(0);
				pp.setCob("closed");
				partnerDao.update(pp);
			}
		}
		else {
			setErreurs(FIELD_CODERACE, "Echec de creation");
			resultat = "Echec de creation";
			return Boolean.FALSE;
		}
		
		return Boolean.TRUE;
	}		
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-23 23:37:23.229
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-23 23:37:23.230
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-23 23:37:23.308
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.CagnotteDto;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	private List<Partner> lpartner;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		supergameAPI = SuperGameDAOAPI.getInstance();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
		    lpartner = partnerDao.getAllPartners();
		   
			
			if(StringUtils.isBlank(coderace)){
				return;
			}
			
			String[] spaceCoderace = coderace.trim().split(" ");
			
			if(coderace.length() < 5){
				
	  		  	setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  	resultat = "Nom très court, 5 caractères minimum";
	  		  	return;
	  		  	
			}
			else if(spaceCoderace.length > 1) {
				
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le nom du partenaire");
				resultat = "Pas d'espace dans le nom du partenaire.";
		  		return;
		  		
			}
			
			 Partner partn = partnerDao.find(coderace);
			 
			 if(partn == null) {
				 
				 Partner part = new Partner();
				 part.setCoderace(coderace);
				 part.setZone(zone);
				 part.setGroupe(1);
				 part.setActif(1);
				 part.setCob("opened");
				 boolean isAdded = addNewPartenaire(part);
				 
				 if(isAdded) {
					 
					 PartnerDto pdto = new PartnerDto();
					 pdto.setCoderace(coderace);
					 pdto.setZone(zone);
					 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
					 
				 }
				 
			 }
			
			
		
			//Partner partner = partnerDao.find(coderace);
			
			 PartnerDto pdto = new PartnerDto();
			 pdto.setCoderace(coderace);
			 pdto.setZone(zone);
			 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			 Partner p = resp.getPartner();
			 String respMess = resp.getMessage();

			 Partner part = new Partner();
			 part.setCoderace(coderace);
			 part.setZone(zone);
			 part.setGroupe(1);
			 part.setActif(1);
			 part.setCob("opened");

			 if ("EXISTS".equalsIgnoreCase(respMess)) {

				 Partner partner = partnerDao.find(coderace);

				 if (partner == null) {
					 addNewPartenaire(part);
				 }
				 else {
					 setErreurs(FIELD_CODERACE, "present");
					 resultat = "Partenaire/Salle deja présent.";
				 }

			 }
			 else if("NEW".equalsIgnoreCase(respMess)) {
				 addNewPartenaire(part);
			 }

		 } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
			 // TODO Auto-generated catch block
			 e.printStackTrace();
		 }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(StringUtils.isBlank(login) || StringUtils.isBlank(pass) || StringUtils.isBlank(profil) || StringUtils.isBlank(partner)){
				return;
			}
			
			String[] spaceLogin = login.trim().split(" ");
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			else if(spaceLogin.length > 1) {
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le login");
		  		resultat_u = "Pas d'espace dans le login.";
		  		return;
			}
			
			
			if(pass.length() < 6){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", "******");
			
			if(caissier == null){
				
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				
				try {
					
					if (n > 0) {
						// Utilisateur crée en local
						
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(pass);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						Caissier caisse = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						if(caisse == null) {
							
							caissierDao.delete(cais);
							setErreurs_u(FIELD_LOGIN, "Echec lors de la creation");
							resultat_u = "Echec lors de la creation.";
							return;
						}
						
						resultat_u="Caissier crée avec succes";
						
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				
//				if(n > 0){	
//					Caissier user = caissierDao.findByLogin(login);
//					//creation de la ligne des mouvements
//					airtimeDao.createMvt(user.getIdCaissier(), 0);
//					resultat_u="Caissier crée avec succes";
//					return;
//				}
//				else{
//					setErreurs_u(FIELD_LOGIN, "Echec de creation");
//					resultat_u = "Echec de creation";
//					return;
//				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					//return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			
			String detail_lot = "";
			CagnotteDto cagnotte = new CagnotteDto();
			
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
			System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setHeur(dat1 + " " + heur);
			cagnotte.setJeu("");
			
			
			try {
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
				resultat_c = "Cagnotte mis à  jour";
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private boolean addNewPartenaire(Partner part) {
		
		int nb_race;
		Long n = 0L;
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			nb_race = kenoDao.create(ken);
			
			//misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return Boolean.FALSE;
			}
			
			for (Partner pp : lpartner) {
				pp.setActif(0);
				pp.setCob("closed");
				partnerDao.update(pp);
			}
		}
		else {
			setErreurs(FIELD_CODERACE, "Echec de creation");
			resultat = "Echec de creation";
			return Boolean.FALSE;
		}
		
		return Boolean.TRUE;
	}		
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-23 23:37:23.311
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-23 23:37:23.312
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-23 23:37:27.945
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.CagnotteDto;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	private List<Partner> lpartner;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		supergameAPI = SuperGameDAOAPI.getInstance();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
		    lpartner = partnerDao.getAllPartners();
		   
			
			if(StringUtils.isBlank(coderace)){
				return;
			}
			
			String[] spaceCoderace = coderace.trim().split(" ");
			
			if(coderace.length() < 5){
				
	  		  	setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  	resultat = "Nom très court, 5 caractères minimum";
	  		  	return;
	  		  	
			}
			else if(spaceCoderace.length > 1) {
				
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le nom du partenaire");
				resultat = "Pas d'espace dans le nom du partenaire.";
		  		return;
		  		
			}
			
			 Partner partn = partnerDao.find(coderace);
			 
			 if(partn == null) {
				 
				 Partner part = new Partner();
				 part.setCoderace(coderace);
				 part.setZone(zone);
				 part.setGroupe(1);
				 part.setActif(1);
				 part.setCob("opened");
				 boolean isAdded = addNewPartenaire(part);
				 
				 if(isAdded) {
					 
					 PartnerDto pdto = new PartnerDto();
					 pdto.setCoderace(coderace);
					 pdto.setZone(zone);
					 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
					 
				 }
				 
			 }
			
			
		
			//Partner partner = partnerDao.find(coderace);
			
			 PartnerDto pdto = new PartnerDto();
			 pdto.setCoderace(coderace);
			 pdto.setZone(zone);
			 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			 Partner p = resp.getPartner();
			 String respMess = resp.getMessage();

			 Partner part = new Partner();
			 part.setCoderace(coderace);
			 part.setZone(zone);
			 part.setGroupe(1);
			 part.setActif(1);
			 part.setCob("opened");

			 if ("EXISTS".equalsIgnoreCase(respMess)) {

				 Partner partner = partnerDao.find(coderace);

				 if (partner == null) {
					 addNewPartenaire(part);
				 }
				 else {
					 setErreurs(FIELD_CODERACE, "present");
					 resultat = "Partenaire/Salle deja présent.";
				 }

			 }
			 else if("NEW".equalsIgnoreCase(respMess)) {
				 addNewPartenaire(part);
			 }

		 } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
			 // TODO Auto-generated catch block
			 e.printStackTrace();
		 }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(StringUtils.isBlank(login) || StringUtils.isBlank(pass) || StringUtils.isBlank(profil) || StringUtils.isBlank(partner)){
				return;
			}
			
			String[] spaceLogin = login.trim().split(" ");
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			else if(spaceLogin.length > 1) {
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le login");
		  		resultat_u = "Pas d'espace dans le login.";
		  		return;
			}
			
			
			if(pass.length() < 6){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", "******");
			
			if(caissier == null){
				
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				
				try {
					
					if (n > 0) {
						// Utilisateur crée en local
						
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(pass);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						Caissier caisse = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						if(caisse == null) {
							
							caissierDao.delete(cais);
							setErreurs_u(FIELD_LOGIN, "Echec lors de la creation");
							resultat_u = "Echec lors de la creation.";
							return;
						}
						
						resultat_u="Caissier crée avec succes";
						
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				
//				if(n > 0){	
//					Caissier user = caissierDao.findByLogin(login);
//					//creation de la ligne des mouvements
//					airtimeDao.createMvt(user.getIdCaissier(), 0);
//					resultat_u="Caissier crée avec succes";
//					return;
//				}
//				else{
//					setErreurs_u(FIELD_LOGIN, "Echec de creation");
//					resultat_u = "Echec de creation";
//					return;
//				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					//return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			
			String detail_lot = "";
			CagnotteDto cagnotte = new CagnotteDto();
			
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
			System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setHeur(dat1 + " " + heur);
			cagnotte.setJeu("");
			
			
			try {
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
				resultat_c = "Cagnotte mis à  jour";
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private boolean addNewPartenaire(Partner part) {
		
		int nb_race;
		Long n = 0L;
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			nb_race = kenoDao.create(ken);
			
			//misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return Boolean.FALSE;
			}
			
			for (Partner pp : lpartner) {
				pp.setActif(0);
				pp.setCob("closed");
				partnerDao.update(pp);
			}
		}
		else {
			setErreurs(FIELD_CODERACE, "Echec de creation");
			resultat = "Echec de creation";
			return Boolean.FALSE;
		}
		
		return Boolean.TRUE;
	}		
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-23 23:37:27.947
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-23 23:37:27.948
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-23 23:37:29.838
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.CagnotteDto;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	private List<Partner> lpartner;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		supergameAPI = SuperGameDAOAPI.getInstance();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
		    lpartner = partnerDao.getAllPartners();
		   
			
			if(StringUtils.isBlank(coderace)){
				return;
			}
			
			String[] spaceCoderace = coderace.trim().split(" ");
			
			if(coderace.length() < 5){
				
	  		  	setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  	resultat = "Nom très court, 5 caractères minimum";
	  		  	return;
	  		  	
			}
			else if(spaceCoderace.length > 1) {
				
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le nom du partenaire");
				resultat = "Pas d'espace dans le nom du partenaire.";
		  		return;
		  		
			}
			
			 Partner partn = partnerDao.find(coderace);
			 
			 if(partn == null) {
				 
				 Partner part = new Partner();
				 part.setCoderace(coderace);
				 part.setZone(zone);
				 part.setGroupe(1);
				 part.setActif(1);
				 part.setCob("opened");
				 boolean isAdded = addNewPartenaire(part);
				 
				 if(isAdded) {
					 
					 PartnerDto pdto = new PartnerDto();
					 pdto.setCoderace(coderace);
					 pdto.setZone(zone);
					 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
					 
				 }
				 
			 }
			
			
		
			//Partner partner = partnerDao.find(coderace);
			
			 PartnerDto pdto = new PartnerDto();
			 pdto.setCoderace(coderace);
			 pdto.setZone(zone);
			 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			 Partner p = resp.getPartner();
			 String respMess = resp.getMessage();

			 Partner part = new Partner();
			 part.setCoderace(coderace);
			 part.setZone(zone);
			 part.setGroupe(1);
			 part.setActif(1);
			 part.setCob("opened");

			 if ("EXISTS".equalsIgnoreCase(respMess)) {

				 Partner partner = partnerDao.find(coderace);

				 if (partner == null) {
					 addNewPartenaire(part);
				 }
				 else {
					 setErreurs(FIELD_CODERACE, "present");
					 resultat = "Partenaire/Salle deja présent.";
				 }

			 }
			 else if("NEW".equalsIgnoreCase(respMess)) {
				 addNewPartenaire(part);
			 }

		 } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
			 // TODO Auto-generated catch block
			 e.printStackTrace();
		 }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(StringUtils.isBlank(login) || StringUtils.isBlank(pass) || StringUtils.isBlank(profil) || StringUtils.isBlank(partner)){
				return;
			}
			
			String[] spaceLogin = login.trim().split(" ");
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			else if(spaceLogin.length > 1) {
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le login");
		  		resultat_u = "Pas d'espace dans le login.";
		  		return;
			}
			
			
			if(pass.length() < 6){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", "******");
			
			if(caissier == null){
				
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				
				try {
					
					if (n > 0) {
						// Utilisateur crée en local
						
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(pass);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						Caissier caisse = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						if(caisse == null) {
							
							caissierDao.delete(cais);
							setErreurs_u(FIELD_LOGIN, "Echec lors de la creation");
							resultat_u = "Echec lors de la creation.";
							return;
						}
						
						resultat_u="Caissier crée avec succes";
						
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				
//				if(n > 0){	
//					Caissier user = caissierDao.findByLogin(login);
//					//creation de la ligne des mouvements
//					airtimeDao.createMvt(user.getIdCaissier(), 0);
//					resultat_u="Caissier crée avec succes";
//					return;
//				}
//				else{
//					setErreurs_u(FIELD_LOGIN, "Echec de creation");
//					resultat_u = "Echec de creation";
//					return;
//				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					//return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			
			String detail_lot = "";
			CagnotteDto cagnotte = new CagnotteDto();
			
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
			System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setHeur(dat1 + " " + heur);
			cagnotte.setJeu("");
			
			
			try {
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
				resultat_c = "Cagnotte mis à  jour";
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private boolean addNewPartenaire(Partner part) {
		
		int nb_race;
		Long n = 0L;
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			nb_race = kenoDao.create(ken);
			
			//misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return Boolean.FALSE;
			}
			
			for (Partner pp : lpartner) {
				pp.setActif(0);
				pp.setCob("closed");
				partnerDao.update(pp);
			}
		}
		else {
			setErreurs(FIELD_CODERACE, "Echec de creation");
			resultat = "Echec de creation";
			return Boolean.FALSE;
		}
		
		return Boolean.TRUE;
	}		
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-23 23:37:29.838
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-23 23:37:29.839
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-23 23:37:32.477
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.CagnotteDto;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	private List<Partner> lpartner;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		supergameAPI = SuperGameDAOAPI.getInstance();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
		    lpartner = partnerDao.getAllPartners();
		   
			
			if(StringUtils.isBlank(coderace)){
				return;
			}
			
			String[] spaceCoderace = coderace.trim().split(" ");
			
			if(coderace.length() < 5){
				
	  		  	setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  	resultat = "Nom très court, 5 caractères minimum";
	  		  	return;
	  		  	
			}
			else if(spaceCoderace.length > 1) {
				
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le nom du partenaire");
				resultat = "Pas d'espace dans le nom du partenaire.";
		  		return;
		  		
			}
			
			 Partner partn = partnerDao.find(coderace);
			 
			 if(partn == null) {
				 
				 Partner part = new Partner();
				 part.setCoderace(coderace);
				 part.setZone(zone);
				 part.setGroupe(1);
				 part.setActif(1);
				 part.setCob("opened");
				 boolean isAdded = addNewPartenaire(part);
				 
				 if(isAdded) {
					 
					 PartnerDto pdto = new PartnerDto();
					 pdto.setCoderace(coderace);
					 pdto.setZone(zone);
					 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
					 
				 }
				 
			 }
			
			
		
			//Partner partner = partnerDao.find(coderace);
			
			 PartnerDto pdto = new PartnerDto();
			 pdto.setCoderace(coderace);
			 pdto.setZone(zone);
			 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			 Partner p = resp.getPartner();
			 String respMess = resp.getMessage();

			 Partner part = new Partner();
			 part.setCoderace(coderace);
			 part.setZone(zone);
			 part.setGroupe(1);
			 part.setActif(1);
			 part.setCob("opened");

			 if ("EXISTS".equalsIgnoreCase(respMess)) {

				 Partner partner = partnerDao.find(coderace);

				 if (partner == null) {
					 addNewPartenaire(part);
				 }
				 else {
					 setErreurs(FIELD_CODERACE, "present");
					 resultat = "Partenaire/Salle deja présent.";
				 }

			 }
			 else if("NEW".equalsIgnoreCase(respMess)) {
				 addNewPartenaire(part);
			 }

		 } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
			 // TODO Auto-generated catch block
			 e.printStackTrace();
		 }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(StringUtils.isBlank(login) || StringUtils.isBlank(pass) || StringUtils.isBlank(profil) || StringUtils.isBlank(partner)){
				return;
			}
			
			String[] spaceLogin = login.trim().split(" ");
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			else if(spaceLogin.length > 1) {
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le login");
		  		resultat_u = "Pas d'espace dans le login.";
		  		return;
			}
			
			
			if(pass.length() < 6){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", "******");
			
			if(caissier == null){
				
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				
				try {
					
					if (n > 0) {
						// Utilisateur crée en local
						
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(pass);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						Caissier caisse = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						if(caisse == null) {
							
							caissierDao.delete(cais);
							setErreurs_u(FIELD_LOGIN, "Echec lors de la creation");
							resultat_u = "Echec lors de la creation.";
							return;
						}
						
						resultat_u="Caissier crée avec succes";
						
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				
//				if(n > 0){	
//					Caissier user = caissierDao.findByLogin(login);
//					//creation de la ligne des mouvements
//					airtimeDao.createMvt(user.getIdCaissier(), 0);
//					resultat_u="Caissier crée avec succes";
//					return;
//				}
//				else{
//					setErreurs_u(FIELD_LOGIN, "Echec de creation");
//					resultat_u = "Echec de creation";
//					return;
//				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					//return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			
			String detail_lot = "";
			CagnotteDto cagnotte = new CagnotteDto();
			
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
			System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setHeur(dat1 + " " + heur);
			cagnotte.setJeu("");
			
			
			try {
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
				resultat_c = "Cagnotte mis à  jour";
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private boolean addNewPartenaire(Partner part) {
		
		int nb_race;
		Long n = 0L;
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			nb_race = kenoDao.create(ken);
			
			//misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return Boolean.FALSE;
			}
			
			for (Partner pp : lpartner) {
				pp.setActif(0);
				pp.setCob("closed");
				partnerDao.update(pp);
			}
		}
		else {
			setErreurs(FIELD_CODERACE, "Echec de creation");
			resultat = "Echec de creation";
			return Boolean.FALSE;
		}
		
		return Boolean.TRUE;
	}		
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-23 23:37:32.479
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-23 23:37:32.479
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-23 23:37:33.097
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.CagnotteDto;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	private List<Partner> lpartner;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		supergameAPI = SuperGameDAOAPI.getInstance();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
		    lpartner = partnerDao.getAllPartners();
		   
			
			if(StringUtils.isBlank(coderace)){
				return;
			}
			
			String[] spaceCoderace = coderace.trim().split(" ");
			
			if(coderace.length() < 5){
				
	  		  	setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  	resultat = "Nom très court, 5 caractères minimum";
	  		  	return;
	  		  	
			}
			else if(spaceCoderace.length > 1) {
				
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le nom du partenaire");
				resultat = "Pas d'espace dans le nom du partenaire.";
		  		return;
		  		
			}
			
			 Partner partn = partnerDao.find(coderace);
			 
			 if(partn == null) {
				 
				 Partner part = new Partner();
				 part.setCoderace(coderace);
				 part.setZone(zone);
				 part.setGroupe(1);
				 part.setActif(1);
				 part.setCob("opened");
				 boolean isAdded = addNewPartenaire(part);
				 
				 if(isAdded) {
					 
					 PartnerDto pdto = new PartnerDto();
					 pdto.setCoderace(coderace);
					 pdto.setZone(zone);
					 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
					 
				 }
				 
			 }
			
			
		
			//Partner partner = partnerDao.find(coderace);
			
			 PartnerDto pdto = new PartnerDto();
			 pdto.setCoderace(coderace);
			 pdto.setZone(zone);
			 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			 Partner p = resp.getPartner();
			 String respMess = resp.getMessage();

			 Partner part = new Partner();
			 part.setCoderace(coderace);
			 part.setZone(zone);
			 part.setGroupe(1);
			 part.setActif(1);
			 part.setCob("opened");

			 if ("EXISTS".equalsIgnoreCase(respMess)) {

				 Partner partner = partnerDao.find(coderace);

				 if (partner == null) {
					 addNewPartenaire(part);
				 }
				 else {
					 setErreurs(FIELD_CODERACE, "present");
					 resultat = "Partenaire/Salle deja présent.";
				 }

			 }
			 else if("NEW".equalsIgnoreCase(respMess)) {
				 addNewPartenaire(part);
			 }

		 } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
			 // TODO Auto-generated catch block
			 e.printStackTrace();
		 }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(StringUtils.isBlank(login) || StringUtils.isBlank(pass) || StringUtils.isBlank(profil) || StringUtils.isBlank(partner)){
				return;
			}
			
			String[] spaceLogin = login.trim().split(" ");
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			else if(spaceLogin.length > 1) {
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le login");
		  		resultat_u = "Pas d'espace dans le login.";
		  		return;
			}
			
			
			if(pass.length() < 6){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", "******");
			
			if(caissier == null){
				
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				
				try {
					
					if (n > 0) {
						// Utilisateur crée en local
						
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(pass);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						Caissier caisse = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						if(caisse == null) {
							
							caissierDao.delete(cais);
							setErreurs_u(FIELD_LOGIN, "Echec lors de la creation");
							resultat_u = "Echec lors de la creation.";
							return;
						}
						
						resultat_u="Caissier crée avec succes";
						
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				
//				if(n > 0){	
//					Caissier user = caissierDao.findByLogin(login);
//					//creation de la ligne des mouvements
//					airtimeDao.createMvt(user.getIdCaissier(), 0);
//					resultat_u="Caissier crée avec succes";
//					return;
//				}
//				else{
//					setErreurs_u(FIELD_LOGIN, "Echec de creation");
//					resultat_u = "Echec de creation";
//					return;
//				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					//return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			
			String detail_lot = "";
			CagnotteDto cagnotte = new CagnotteDto();
			
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
			System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setHeur(dat1 + " " + heur);
			cagnotte.setJeu("");
			
			
			try {
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
				resultat_c = "Cagnotte mis à  jour";
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private boolean addNewPartenaire(Partner part) {
		
		int nb_race;
		Long n = 0L;
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			nb_race = kenoDao.create(ken);
			
			//misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return Boolean.FALSE;
			}
			
			for (Partner pp : lpartner) {
				pp.setActif(0);
				pp.setCob("closed");
				partnerDao.update(pp);
			}
		}
		else {
			setErreurs(FIELD_CODERACE, "Echec de creation");
			resultat = "Echec de creation";
			return Boolean.FALSE;
		}
		
		return Boolean.TRUE;
	}		
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-23 23:37:33.098
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-23 23:37:33.099
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-23 23:37:36.090
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.CagnotteDto;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	private List<Partner> lpartner;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		supergameAPI = SuperGameDAOAPI.getInstance();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
		    lpartner = partnerDao.getAllPartners();
		   
			
			if(StringUtils.isBlank(coderace)){
				return;
			}
			
			String[] spaceCoderace = coderace.trim().split(" ");
			
			if(coderace.length() < 5){
				
	  		  	setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  	resultat = "Nom très court, 5 caractères minimum";
	  		  	return;
	  		  	
			}
			else if(spaceCoderace.length > 1) {
				
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le nom du partenaire");
				resultat = "Pas d'espace dans le nom du partenaire.";
		  		return;
		  		
			}
			
			 Partner partn = partnerDao.find(coderace);
			 
			 if(partn == null) {
				 
				 Partner part = new Partner();
				 part.setCoderace(coderace);
				 part.setZone(zone);
				 part.setGroupe(1);
				 part.setActif(1);
				 part.setCob("opened");
				 boolean isAdded = addNewPartenaire(part);
				 
				 if(isAdded) {
					 
					 PartnerDto pdto = new PartnerDto();
					 pdto.setCoderace(coderace);
					 pdto.setZone(zone);
					 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
					 
				 }
				 
			 }
			
			
		
			//Partner partner = partnerDao.find(coderace);
			
			 PartnerDto pdto = new PartnerDto();
			 pdto.setCoderace(coderace);
			 pdto.setZone(zone);
			 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			 Partner p = resp.getPartner();
			 String respMess = resp.getMessage();

			 Partner part = new Partner();
			 part.setCoderace(coderace);
			 part.setZone(zone);
			 part.setGroupe(1);
			 part.setActif(1);
			 part.setCob("opened");

			 if ("EXISTS".equalsIgnoreCase(respMess)) {

				 Partner partner = partnerDao.find(coderace);

				 if (partner == null) {
					 addNewPartenaire(part);
				 }
				 else {
					 setErreurs(FIELD_CODERACE, "present");
					 resultat = "Partenaire/Salle deja présent.";
				 }

			 }
			 else if("NEW".equalsIgnoreCase(respMess)) {
				 addNewPartenaire(part);
			 }

		 } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
			 // TODO Auto-generated catch block
			 e.printStackTrace();
		 }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(StringUtils.isBlank(login) || StringUtils.isBlank(pass) || StringUtils.isBlank(profil) || StringUtils.isBlank(partner)){
				return;
			}
			
			String[] spaceLogin = login.trim().split(" ");
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			else if(spaceLogin.length > 1) {
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le login");
		  		resultat_u = "Pas d'espace dans le login.";
		  		return;
			}
			
			
			if(pass.length() < 6){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", "******");
			
			if(caissier == null){
				
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				
				try {
					
					if (n > 0) {
						// Utilisateur crée en local
						
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(pass);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						Caissier caisse = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						if(caisse == null) {
							
							caissierDao.delete(cais);
							setErreurs_u(FIELD_LOGIN, "Echec lors de la creation");
							resultat_u = "Echec lors de la creation.";
							return;
						}
						
						resultat_u="Caissier crée avec succes";
						
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				
//				if(n > 0){	
//					Caissier user = caissierDao.findByLogin(login);
//					//creation de la ligne des mouvements
//					airtimeDao.createMvt(user.getIdCaissier(), 0);
//					resultat_u="Caissier crée avec succes";
//					return;
//				}
//				else{
//					setErreurs_u(FIELD_LOGIN, "Echec de creation");
//					resultat_u = "Echec de creation";
//					return;
//				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					//return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			
			String detail_lot = "";
			CagnotteDto cagnotte = new CagnotteDto();
			
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
			System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setHeur(dat1 + " " + heur);
			cagnotte.setJeu("");
			
			
			try {
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
				resultat_c = "Cagnotte mis à  jour";
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private boolean addNewPartenaire(Partner part) {
		
		int nb_race;
		Long n = 0L;
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			nb_race = kenoDao.create(ken);
			
			//misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return Boolean.FALSE;
			}
			
			for (Partner pp : lpartner) {
				pp.setActif(0);
				pp.setCob("closed");
				partnerDao.update(pp);
			}
		}
		else {
			setErreurs(FIELD_CODERACE, "Echec de creation");
			resultat = "Echec de creation";
			return Boolean.FALSE;
		}
		
		return Boolean.TRUE;
	}		
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-23 23:37:36.091
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-23 23:37:36.093
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-23 23:37:36.458
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.CagnotteDto;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	private List<Partner> lpartner;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		supergameAPI = SuperGameDAOAPI.getInstance();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
		    lpartner = partnerDao.getAllPartners();
		   
			
			if(StringUtils.isBlank(coderace)){
				return;
			}
			
			String[] spaceCoderace = coderace.trim().split(" ");
			
			if(coderace.length() < 5){
				
	  		  	setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  	resultat = "Nom très court, 5 caractères minimum";
	  		  	return;
	  		  	
			}
			else if(spaceCoderace.length > 1) {
				
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le nom du partenaire");
				resultat = "Pas d'espace dans le nom du partenaire.";
		  		return;
		  		
			}
			
			 Partner partn = partnerDao.find(coderace);
			 
			 if(partn == null) {
				 
				 Partner part = new Partner();
				 part.setCoderace(coderace);
				 part.setZone(zone);
				 part.setGroupe(1);
				 part.setActif(1);
				 part.setCob("opened");
				 boolean isAdded = addNewPartenaire(part);
				 
				 if(isAdded) {
					 
					 PartnerDto pdto = new PartnerDto();
					 pdto.setCoderace(coderace);
					 pdto.setZone(zone);
					 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
					 
				 }
				 
			 }
			
			
		
			//Partner partner = partnerDao.find(coderace);
			
			 PartnerDto pdto = new PartnerDto();
			 pdto.setCoderace(coderace);
			 pdto.setZone(zone);
			 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			 Partner p = resp.getPartner();
			 String respMess = resp.getMessage();

			 Partner part = new Partner();
			 part.setCoderace(coderace);
			 part.setZone(zone);
			 part.setGroupe(1);
			 part.setActif(1);
			 part.setCob("opened");

			 if ("EXISTS".equalsIgnoreCase(respMess)) {

				 Partner partner = partnerDao.find(coderace);

				 if (partner == null) {
					 addNewPartenaire(part);
				 }
				 else {
					 setErreurs(FIELD_CODERACE, "present");
					 resultat = "Partenaire/Salle deja présent.";
				 }

			 }
			 else if("NEW".equalsIgnoreCase(respMess)) {
				 addNewPartenaire(part);
			 }

		 } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
			 // TODO Auto-generated catch block
			 e.printStackTrace();
		 }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(StringUtils.isBlank(login) || StringUtils.isBlank(pass) || StringUtils.isBlank(profil) || StringUtils.isBlank(partner)){
				return;
			}
			
			String[] spaceLogin = login.trim().split(" ");
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			else if(spaceLogin.length > 1) {
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le login");
		  		resultat_u = "Pas d'espace dans le login.";
		  		return;
			}
			
			
			if(pass.length() < 6){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", "******");
			
			if(caissier == null){
				
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				
				try {
					
					if (n > 0) {
						// Utilisateur crée en local
						
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(pass);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						Caissier caisse = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						if(caisse == null) {
							
							caissierDao.delete(cais);
							setErreurs_u(FIELD_LOGIN, "Echec lors de la creation");
							resultat_u = "Echec lors de la creation.";
							return;
						}
						
						resultat_u="Caissier crée avec succes";
						
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				
//				if(n > 0){	
//					Caissier user = caissierDao.findByLogin(login);
//					//creation de la ligne des mouvements
//					airtimeDao.createMvt(user.getIdCaissier(), 0);
//					resultat_u="Caissier crée avec succes";
//					return;
//				}
//				else{
//					setErreurs_u(FIELD_LOGIN, "Echec de creation");
//					resultat_u = "Echec de creation";
//					return;
//				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					//return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			
			String detail_lot = "";
			CagnotteDto cagnotte = new CagnotteDto();
			
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
			System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setHeur(dat1 + " " + heur);
			cagnotte.setJeu("");
			
			
			try {
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
				resultat_c = "Cagnotte mis à  jour";
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private boolean addNewPartenaire(Partner part) {
		
		int nb_race;
		Long n = 0L;
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			nb_race = kenoDao.create(ken);
			
			//misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return Boolean.FALSE;
			}
			
			for (Partner pp : lpartner) {
				pp.setActif(0);
				pp.setCob("closed");
				partnerDao.update(pp);
			}
		}
		else {
			setErreurs(FIELD_CODERACE, "Echec de creation");
			resultat = "Echec de creation";
			return Boolean.FALSE;
		}
		
		return Boolean.TRUE;
	}		
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-23 23:37:36.460
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-23 23:37:36.461
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-23 23:37:37.176
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.CagnotteDto;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	private List<Partner> lpartner;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		supergameAPI = SuperGameDAOAPI.getInstance();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
		    lpartner = partnerDao.getAllPartners();
		   
			
			if(StringUtils.isBlank(coderace)){
				return;
			}
			
			String[] spaceCoderace = coderace.trim().split(" ");
			
			if(coderace.length() < 5){
				
	  		  	setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  	resultat = "Nom très court, 5 caractères minimum";
	  		  	return;
	  		  	
			}
			else if(spaceCoderace.length > 1) {
				
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le nom du partenaire");
				resultat = "Pas d'espace dans le nom du partenaire.";
		  		return;
		  		
			}
		
			
			 Partner partn = partnerDao.find(coderace);
			 
			 if(partn == null) {
				 
				 Partner part = new Partner();
				 part.setCoderace(coderace);
				 part.setZone(zone);
				 part.setGroupe(1);
				 part.setActif(1);
				 part.setCob("opened");
				 boolean isAdded = addNewPartenaire(part);
				 
				 if(isAdded) {
					 
					 PartnerDto pdto = new PartnerDto();
					 pdto.setCoderace(coderace);
					 pdto.setZone(zone);
					 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
					 
				 }
				 
			 }
			
			
		
			//Partner partner = partnerDao.find(coderace);
			
			 PartnerDto pdto = new PartnerDto();
			 pdto.setCoderace(coderace);
			 pdto.setZone(zone);
			 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			 Partner p = resp.getPartner();
			 String respMess = resp.getMessage();

			 Partner part = new Partner();
			 part.setCoderace(coderace);
			 part.setZone(zone);
			 part.setGroupe(1);
			 part.setActif(1);
			 part.setCob("opened");

			 if ("EXISTS".equalsIgnoreCase(respMess)) {

				 Partner partner = partnerDao.find(coderace);

				 if (partner == null) {
					 addNewPartenaire(part);
				 }
				 else {
					 setErreurs(FIELD_CODERACE, "present");
					 resultat = "Partenaire/Salle deja présent.";
				 }

			 }
			 else if("NEW".equalsIgnoreCase(respMess)) {
				 addNewPartenaire(part);
			 }

		 } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
			 // TODO Auto-generated catch block
			 e.printStackTrace();
		 }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(StringUtils.isBlank(login) || StringUtils.isBlank(pass) || StringUtils.isBlank(profil) || StringUtils.isBlank(partner)){
				return;
			}
			
			String[] spaceLogin = login.trim().split(" ");
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			else if(spaceLogin.length > 1) {
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le login");
		  		resultat_u = "Pas d'espace dans le login.";
		  		return;
			}
			
			
			if(pass.length() < 6){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", "******");
			
			if(caissier == null){
				
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				
				try {
					
					if (n > 0) {
						// Utilisateur crée en local
						
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(pass);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						Caissier caisse = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						if(caisse == null) {
							
							caissierDao.delete(cais);
							setErreurs_u(FIELD_LOGIN, "Echec lors de la creation");
							resultat_u = "Echec lors de la creation.";
							return;
						}
						
						resultat_u="Caissier crée avec succes";
						
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				
//				if(n > 0){	
//					Caissier user = caissierDao.findByLogin(login);
//					//creation de la ligne des mouvements
//					airtimeDao.createMvt(user.getIdCaissier(), 0);
//					resultat_u="Caissier crée avec succes";
//					return;
//				}
//				else{
//					setErreurs_u(FIELD_LOGIN, "Echec de creation");
//					resultat_u = "Echec de creation";
//					return;
//				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					//return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			
			String detail_lot = "";
			CagnotteDto cagnotte = new CagnotteDto();
			
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
			System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setHeur(dat1 + " " + heur);
			cagnotte.setJeu("");
			
			
			try {
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
				resultat_c = "Cagnotte mis à  jour";
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private boolean addNewPartenaire(Partner part) {
		
		int nb_race;
		Long n = 0L;
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			nb_race = kenoDao.create(ken);
			
			//misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return Boolean.FALSE;
			}
			
			for (Partner pp : lpartner) {
				pp.setActif(0);
				pp.setCob("closed");
				partnerDao.update(pp);
			}
		}
		else {
			setErreurs(FIELD_CODERACE, "Echec de creation");
			resultat = "Echec de creation";
			return Boolean.FALSE;
		}
		
		return Boolean.TRUE;
	}		
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-23 23:37:37.178
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-23 23:37:37.179
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-23 23:37:37.294
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package business;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.codehaus.jettison.json.JSONException;
import org.jasypt.util.password.ConfigurablePasswordEncryptor;

import config.Params;
import modele.CagnotteDto;
import modele.Caissier;
import modele.CaissierDto;
import modele.Config;
import modele.Keno;
import modele.Partner;
import modele.PartnerDto;
import modele.ResPartner;
import superbetDAO.AirtimeDAO;
import superbetDAO.CagnotteDAO;
import superbetDAO.CaissierDAO;
import superbetDAO.ConfigDAO;
import superbetDAO.EffChoicekDAO;
import superbetDAO.GameCycleDAO;
import superbetDAO.KenoDAO;
import superbetDAO.MisekDAO;
import superbetDAO.Misek_tempDAO;
import superbetDAO.MisetDAO;
import superbetDAO.PartnerDAO;
import superbetDAO.SpinDAO;
import superbetDAO.UtilDAO;
import superbetDAO.VersementDAO;
import superbetDAO.api.exeception.DAOAPIException;
import superbetDAO.api.implementations.SuperGameDAOAPI;
import superbetDAO.api.interfaces.ISuperGameDAOAPILocal;

public final class ConfigForm {
	
	private static final String FIELD_CODERACE = "ncpartner";
	private static final String FIELD_ZONE = "nczone";
	
	private static final String FIELD_NOM_CAISSIER = "ncuser";
	private static final String FIELD_LOGIN = "nclogin";
	private static final String FIELD_PASS = "ncpass";
	private static final String FIELD_PROFIL = "ncprofil";
	private static final String FIELD_PARTNER = "ncsalle_cais";
	private static final String FIELD_JEU = "ncbonus_jeu";
	
	private static final String FIELD_BONUSK0 = "bonu_sum_min";
	private static final String FIELD_BONUSK1 = "bonu_sum_max";
	private static final String FIELD_BONUSK_RATE = "ncbonus_rate";
	private static final String FIELD_BONUSK_RESERVE = "ncbonus_reserve";
	private static final String FIELD_KCODERACE = "ncbonus_part1";
	private static final String FIELD_DATE1 = "cgddebut";
	private  ISuperGameDAOAPILocal  supergameAPI;
	
	private  String resultat = null;
	private  String resultat_u = null;
	private  String resultat_b = null;
	private  String resultat_c = null;
	private  Map<String, String> erreurs;
	private  Map<String, String> erreurs_u;
	private  Map<String, String> erreurs_b;
	private  Map<String, String> erreurs_c;
	private String action="";
	private String coderace="", dat1;
	private String zone="";
	
	private String bonusk0;
	private String bonusk1;
    private double mbonusk0;
    private double mbonusk1;
    private int ajout = 0;
   
	
	private  Map<String, String> user;
	private List<Partner> lpartner;
	
	private KenoDAO kenoDao;
	private MisetDAO misetDao;
	private EffChoicekDAO effchoicekDao;
	private MisekDAO misekDao;
	private VersementDAO verstDao;
	private PartnerDAO partnerDao;
	private Misek_tempDAO misektpDao;
	private UtilDAO utilDao;
	private CaissierDAO caissierDao;
	private ConfigDAO configDao;
	private SpinDAO spinDao;
	private AirtimeDAO airtimeDao;
	private GameCycleDAO game_cycleDao;
	private CagnotteDAO cagnotteDao;
	
	
	public String getResultat() {
		return resultat;
	}
	
	public Map<String, String> getErreurs_u() {
		return erreurs_u;
	}

	public void setErreurs_u(String champ, String message) {
		erreurs_u.put(champ, message);
	}

	public Map<String, String> getErreurs_b() {
		return erreurs_b;
	}

	public void setErreurs_b(String champ, String message) {
		erreurs_b.put(champ, message);
	}

	public Map<String, String> getErreurs_c() {
		return erreurs_c;
	}

	public void setErreurs_c(String champ, String message) {
		erreurs_c.put(champ, message);
	}
	
	public String getResultat_u() {
		return resultat_u;
	}

	public String getResultat_b() {
		return resultat_b;
	}

	public String getResultat_c() {
		return resultat_c;
	}
	public String getAction() {
		return action;
	}
	
	public String getCoderace() {
		return coderace;
	}
	
	public String getZone() {
		return zone;
	}
	
	public Map<String, String> getErreurs() {
		return erreurs;
	}
	public void setErreurs(String champ, String message) {
		erreurs.put(champ, message);
	}
	
	
	
	public Map<String, String> getUser() {
		return user;
	}

	public void setUser(String champ, String message) {
		user.put(champ, message);;
	}
	
	public String getBonusk0() {
		return bonusk0;
	}

	public void setBonusk0(String bonusk0) {
		this.bonusk0 = bonusk0;
	}

	public String getBonusk1() {
		return bonusk1;
	}

	public void setBonusk1(String bonusk1) {
		this.bonusk1 = bonusk1;
	}

	public void setResultat(String resultat) {
		this.resultat = resultat;
	}

	public String getDat1() {
		return dat1;
	}

	public void setDat1(String dat1) {
		this.dat1 = dat1;
	}

	public ConfigForm(KenoDAO kenoDao,MisetDAO misetDao,UtilDAO utilDao,EffChoicekDAO effchoicekDao,MisekDAO misekDao,
			VersementDAO verstDao, PartnerDAO partnerDao, Misek_tempDAO misektpDao, CaissierDAO caissierDao, ConfigDAO configDao, SpinDAO spinDao, 
			AirtimeDAO airtimeDao, GameCycleDAO game_cycleDao){
		this.kenoDao = kenoDao;
		this.misetDao = misetDao;
		this.effchoicekDao = effchoicekDao;
		this.misekDao = misekDao;
		this.verstDao = verstDao;
		this.partnerDao = partnerDao;
		this.misektpDao = misektpDao;
		this.utilDao = utilDao;
		this.caissierDao = caissierDao;
		this.configDao = configDao;
		this.spinDao = spinDao;
		this.airtimeDao = airtimeDao;
		this.game_cycleDao = game_cycleDao;
		supergameAPI = SuperGameDAOAPI.getInstance();
	}
	
	public void manage_config(HttpServletRequest request){
		erreurs = new HashMap<String, String>();
		erreurs_u = new HashMap<String, String>();
		erreurs_b = new HashMap<String, String>();
		erreurs_c = new HashMap<String, String>();
		action = getName( request, "idconfig" );// definit l'action Ã  traiter. ajout partner, ajout caissier...
		
		if(action.equalsIgnoreCase("addpartner")){
			
			coderace = getName( request, FIELD_CODERACE );
			zone = getName( request, FIELD_ZONE );
			
			// recupere tous les partenaires
		    lpartner = partnerDao.getAllPartners();
		   
			
			if(StringUtils.isBlank(coderace)){
				return;
			}
			
			String[] spaceCoderace = coderace.trim().split(" ");
			
			if(coderace.length() < 5){
				
	  		  	setErreurs(FIELD_CODERACE, "Longueur du nom très court");
	  		  	resultat = "Nom très court, 5 caractères minimum";
	  		  	return;
	  		  	
			}
			else if(spaceCoderace.length > 1) {
				
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le nom du partenaire");
				resultat = "Pas d'espace dans le nom du partenaire.";
		  		return;
		  		
			}
		
			
			 Partner partn = partnerDao.find(coderace);
			 
			 if(partn == null) {
				 
				 Partner part = new Partner();
				 part.setCoderace(coderace);
				 part.setZone(zone);
				 part.setGroupe(1);
				 part.setActif(1);
				 part.setCob("opened");
				 boolean isAdded = addNewPartenaire(part);
				 
				 if(isAdded) {
					 
					 PartnerDto pdto = new PartnerDto();
					 pdto.setCoderace(coderace);
					 pdto.setZone(zone);
					 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
					 
				 }
				 
			 }
			
			
		
			//Partner partner = partnerDao.find(coderace);
			
			 PartnerDto pdto = new PartnerDto();
			 pdto.setCoderace(coderace);
			 pdto.setZone(zone);
			 ResPartner resp = supergameAPI.getSuperGameDAO().submitPartner(Params.url, pdto);
			 Partner p = resp.getPartner();
			 String respMess = resp.getMessage();

			 Partner part = new Partner();
			 part.setCoderace(coderace);
			 part.setZone(zone);
			 part.setGroupe(1);
			 part.setActif(1);
			 part.setCob("opened");

			 if ("EXISTS".equalsIgnoreCase(respMess)) {

				 Partner partner = partnerDao.find(coderace);

				 if (partner == null) {
					 addNewPartenaire(part);
				 }
				 else {
					 setErreurs(FIELD_CODERACE, "present");
					 resultat = "Partenaire/Salle deja présent.";
				 }

			 }
			 else if("NEW".equalsIgnoreCase(respMess)) {
				 addNewPartenaire(part);
			 }

		 } catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
			 // TODO Auto-generated catch block
			 e.printStackTrace();
		 }
		}
		else if(action.equalsIgnoreCase("addcaissier")){
			user = new HashMap<String, String>();
			
			String nom_user = getName(request, FIELD_NOM_CAISSIER);
			String login = getName(request, FIELD_LOGIN);
			String pass = getPass(request, FIELD_PASS);
			String profil = getName(request, FIELD_PROFIL);
			String partner = getName(request, FIELD_PARTNER);
			
			if(StringUtils.isBlank(login) || StringUtils.isBlank(pass) || StringUtils.isBlank(profil) || StringUtils.isBlank(partner)){
				return;
			}
			
			String[] spaceLogin = login.trim().split(" ");
			if(login.length() < 5){
	  		  setErreurs_u(FIELD_LOGIN, "Longueur du login très court");
	  		  resultat_u = "Login très court, 5 caractères minimum";
	  		  return;
			}
			else if(spaceLogin.length > 1) {
				setErreurs_u(FIELD_LOGIN, "Pas d'espace dans le login");
		  		resultat_u = "Pas d'espace dans le login.";
		  		return;
			}
			
			
			if(pass.length() < 6){
	  		  setErreurs_u(FIELD_PASS, "Longueur du mot de passe très court");
	  		  resultat_u = "pass très court, 5 caractÃ¨res minimum";
	  		  return;
			}
			
			ConfigurablePasswordEncryptor passwordEncryptor = new ConfigurablePasswordEncryptor();
			passwordEncryptor.setAlgorithm( Params.ALGO_CHIFFREMENT );
			passwordEncryptor.setPlainDigest( false );
			
			Caissier caissier = caissierDao.findByLogin(login);
			Long idpartner = partnerDao.find(partner).getIdpartner();
			Long idprofil = 2L;
			if(profil.equalsIgnoreCase("CAISSIER")){
				idprofil = 2L;
			}
			else if(profil.equalsIgnoreCase("ADMINISTRATEUR")){
				idprofil = 1L;
			}
			
			String passChiffre = passwordEncryptor.encryptPassword(pass);
			setUser("nomc", nom_user);
			setUser("loginc", login);
			setUser("passc", "******");
			
			if(caissier == null){
				
				int n = 0;
				Caissier cais = new Caissier();
				cais.setNomc(nom_user);
				cais.setLoginc(login);
				cais.setMdpc(passChiffre);
				cais.setPartner(partner);
				cais.setProfil(idprofil);
				cais.setGrpe(1);
				//System.out.println(cais);
				n = caissierDao.create(cais);
				
				try {
					
					if (n > 0) {
						// Utilisateur crée en local
						
						CaissierDto caisDto = new CaissierDto();
						caisDto.setNomc(nom_user);
						caisDto.setLoginc(login);
						caisDto.setMdpc(pass);
						caisDto.setPartner(partner);
						caisDto.setProfil(idprofil);
						caisDto.setGrpe(1);
						//System.out.println(caisDto);
						Caissier caisse = supergameAPI.getSuperGameDAO().saveUser(Params.url, caisDto, partner);
						if(caisse == null) {
							
							caissierDao.delete(cais);
							setErreurs_u(FIELD_LOGIN, "Echec lors de la creation");
							resultat_u = "Echec lors de la creation.";
							return;
						}
						
						resultat_u="Caissier crée avec succes";
						
					}
					
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					e.printStackTrace();
					return;
				}
				
//				if(n > 0){	
//					Caissier user = caissierDao.findByLogin(login);
//					//creation de la ligne des mouvements
//					airtimeDao.createMvt(user.getIdCaissier(), 0);
//					resultat_u="Caissier crée avec succes";
//					return;
//				}
//				else{
//					setErreurs_u(FIELD_LOGIN, "Echec de creation");
//					resultat_u = "Echec de creation";
//					return;
//				}
				
				
			}
			else{
				setErreurs_u(FIELD_LOGIN, "present");
				resultat_u = "Login utilisé, veuillez entrer un autre";
			}
		}
		else if(action.equalsIgnoreCase("addbonus")){
			bonusk0 = getName(request, FIELD_BONUSK0);
			bonusk1 = getName(request, FIELD_BONUSK1);
			String jeu = getName(request, FIELD_JEU);
			//System.out.println("BONUSMIN: "+bonusk0+" BONUSMAX: "+bonusk1+" | "+jeu);
			coderace = getName( request, FIELD_KCODERACE );
			String bonusk_rate = getName(request,  FIELD_BONUSK_RATE);
			//System.out.println("coderace: "+coderace+" | "+bonusk_rate);
			Long idpartner = partnerDao.find(coderace).getIdpartner();
			resultat_b = "";
			erreurs_b.clear();
			if(jeu == null || jeu.equalsIgnoreCase("")){
				setErreurs_b(FIELD_JEU, "Mauvais jeu");
				resultat_b = "Veuillez selectionner un type de jeu";
				return;
			}
			
			if(jeu.equalsIgnoreCase("keno")){
				if(coderace == null || coderace.equalsIgnoreCase("")){
					setErreurs_b(FIELD_KCODERACE, "Mauvais partenaire");
					resultat_b = "Veuillez selectionner un partenaire";
					return;
				}
				if(jeu == null || jeu.equalsIgnoreCase("")){
					setErreurs_b(FIELD_JEU, "Mauvais jeu");
					resultat_b = "Veuillez selectionner un type de jeu";
					return;
				}
				if(bonusk0 != null && !bonusk0.equalsIgnoreCase("")){
					mbonusk0 = Double.parseDouble(bonusk0);
				}
				else{
					setErreurs_b(FIELD_BONUSK0, "Mauvais montant min");
					resultat_b = "Veuillez saisir un montant min valide";
					return;
				}
				if(bonusk1 != null && !bonusk1.equalsIgnoreCase("")){
					mbonusk1 = Double.parseDouble(bonusk1);
				}
				else{
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant max");
					resultat_b = "Veuillez saisir un montant max valide";
					return;
				}
				if(mbonusk0 > mbonusk1){
					setErreurs_b(FIELD_BONUSK1, "Mauvais montant");
					resultat_b = "Bonus Min supérieur à Bonus Max";
					return;
				}
				if(bonusk_rate == null || bonusk_rate.equalsIgnoreCase("")){
					bonusk_rate = "2";
					//return;
				}
				double k_rate = Double.parseDouble(bonusk_rate)/100;
				
				try {
					//ajout = configDao.updateBonusK(k_rate, mbonusk0, mbonusk1, coderace );
					ajout = supergameAPI.getSuperGameDAO().updateBonusK(Params.url, k_rate, mbonusk0, mbonusk1, coderace);
					if(ajout != 0){
						erreurs.clear();
						resultat_b = "Mise à jour du bonus effectué avec succès";
					}
					else{
						setErreurs_b("Update", "Echec de la mise à jour");
						resultat_b = "Echec de la mise à jour";
						return;
					}
				} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			else if(jeu.equalsIgnoreCase("spin")){
				
			}
			else if(jeu.equalsIgnoreCase("dog")){
				
			}
		}
		else if(action.equalsIgnoreCase("addcagnotte")){
			
			String detail_lot = "";
			CagnotteDto cagnotte = new CagnotteDto();
			
			dat1 = getName(request, FIELD_DATE1);
			String partner = getName(request, "ncbonus_part2");
			String lot = getName(request, "ncbonus_part");
			String heur = getName(request, "cg_heure");
			
			if(lot == null) {
				setErreurs_c("Update", "Veuillez choisir un lot");
				resultat_c = "Veuillez choisir un lot";
				return;
			}
			if(dat1 == null) {
				setErreurs_c("Update", "Veuillez choisir le jour de tombée");
				resultat_c = "Veuillez choisir le jour de tombée";
				return;
			}
			
			System.out.println("Lot: "+lot+" Date: "+dat1+":"+heur+" partner: "+partner);
			if(lot.equalsIgnoreCase("1")) {
				detail_lot = "tel";
			}
			else if(lot.equalsIgnoreCase("2")) {
				detail_lot = "woofer";
			}
			else if(lot.equalsIgnoreCase("3")) {
				detail_lot = "tricot";
			}
			else if(lot.equalsIgnoreCase("4")) {
				detail_lot = "conso";
			}
			else if(lot.equalsIgnoreCase("5")) {
				detail_lot = "ecran";
			}
			else if(lot.equalsIgnoreCase("6")) {
				detail_lot = "cash";
			}
			
			cagnotte.setLot(detail_lot);
			cagnotte.setHeur(dat1 + " " + heur);
			cagnotte.setJeu("");
			
			
			try {
				cagnotte = supergameAPI.getSuperGameDAO().saveJackpot(Params.url, cagnotte, partner);
				resultat_c = "Cagnotte mis à  jour";
			} catch (IOException | JSONException | URISyntaxException | DAOAPIException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				setErreurs_c("Update", "Erreur de creation cagnotte");
				resultat = "Erreur de creation cagnotte";
				return;
			}
			
		}
		
		
	}
	
	private String getName( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    
    	  return valeur.trim(); 
       }
       
	}
	
	private String getPass( HttpServletRequest request,String nomChamp ) {
        String valeur = request.getParameter( nomChamp );
       
       if ( valeur == null || valeur.trim().length() == 0) {
           return null;
       } else{
    	  return valeur.trim(); 
       }
       
	}
	
	private String getValRadio(HttpServletRequest request, String nomChamp){
		String valeur = request.getParameter(nomChamp);
		return valeur;
	}
	
	private boolean addNewPartenaire(Partner part) {
		
		int nb_race;
		Long n = 0L;
		n = partnerDao.create(part);
		
		if(n > 0){	
			
			//ajout d'une de configuration
			Config conf = new Config();
			conf.setCoderace(coderace);
			configDao.create(conf);
			
			//ajout d'un tirage par defaut
			Keno ken = new Keno();
			ken.setDrawnumK("1");
			ken.setMultiplicateur("0");
			ken.setDrawnumbK("'1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18-19-20'");
			ken.setCoderace(coderace);
			ken.setHeureTirage("01/01/2020-00:00:00");
			nb_race = kenoDao.create(ken);
			
			//misetDao.createFree(n);
			
			if(nb_race > 0){
				resultat = "Partenaire enregistré avec succes";
			}
			else{
				setErreurs(FIELD_CODERACE, "Echec de creation");
				resultat = "Echec de creation";
				return Boolean.FALSE;
			}
			
			for (Partner pp : lpartner) {
				pp.setActif(0);
				pp.setCob("closed");
				partnerDao.update(pp);
			}
		}
		else {
			setErreurs(FIELD_CODERACE, "Echec de creation");
			resultat = "Echec de creation";
			return Boolean.FALSE;
		}
		
		return Boolean.TRUE;
	}		
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-23 23:37:37.296
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-23 23:37:37.297
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.lsp4e 4 0 2023-07-24 21:44:03.551
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy35.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-24 21:44:03.564
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy34.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-24 21:44:03.569
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy34.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-24 21:44:03.578
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy35.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 2 0 2023-07-24 21:44:04.490
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-24 22:14:50.983
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-25 01:01:51.506
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-25 06:15:08.652
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-25 06:15:36.724
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-25 06:18:35.174
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-25 06:57:47.309
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-25 07:00:53.062
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-25 07:09:01.327
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-25 07:14:16.007
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-25 08:19:15.455
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 4 0 2023-07-26 02:13:09.049
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy35.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-26 02:13:09.210
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy35.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-26 02:13:09.213
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy34.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-26 02:13:09.214
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy34.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.jdt.core 4 4 2023-07-26 02:13:33.333
!MESSAGE Error occurred while deleting: /superbet/WebContent/WEB-INF/classes/servlets
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:784)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete '/superbet/WebContent/WEB-INF/classes/servlets'.
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:367)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Problems encountered while deleting files.
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\ManageKeno.class.
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\ManageKeno.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\ManageTimep.class.
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\ManageTimep.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets.
!SUBENTRY 1 org.eclipse.core.resources 4 273 2023-07-26 02:13:33.334
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 2 org.eclipse.core.resources 4 273 2023-07-26 02:13:33.334
!MESSAGE Could not delete '/superbet/WebContent/WEB-INF/classes/servlets'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:367)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Problems encountered while deleting files.
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\ManageKeno.class.
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\ManageKeno.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\ManageTimep.class.
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\ManageTimep.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets.
!SUBENTRY 3 org.eclipse.core.resources 4 273 2023-07-26 02:13:33.335
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 4 org.eclipse.core.filesystem 4 273 2023-07-26 02:13:33.335
!MESSAGE Problems encountered while deleting files.
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2023-07-26 02:13:33.335
!MESSAGE Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\ManageKeno.class.
!STACK 0
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\ManageKeno.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2023-07-26 02:13:33.335
!MESSAGE Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\ManageTimep.class.
!STACK 0
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets\ManageTimep.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2023-07-26 02:13:33.335
!MESSAGE Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\servlets.

!ENTRY org.eclipse.jdt.core 4 4 2023-07-26 02:13:33.348
!MESSAGE Error occurred while deleting: /superbet/WebContent/WEB-INF/classes/superbetDAO
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:784)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete '/superbet/WebContent/WEB-INF/classes/superbetDAO'.
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:367)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Problems encountered while deleting files.
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAO\DAOConfigurationException.class.
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAO\DAOConfigurationException.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAO.
!SUBENTRY 1 org.eclipse.core.resources 4 273 2023-07-26 02:13:33.349
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 2 org.eclipse.core.resources 4 273 2023-07-26 02:13:33.349
!MESSAGE Could not delete '/superbet/WebContent/WEB-INF/classes/superbetDAO'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:367)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Problems encountered while deleting files.
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAO\DAOConfigurationException.class.
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAO\DAOConfigurationException.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAO.
!SUBENTRY 3 org.eclipse.core.resources 4 273 2023-07-26 02:13:33.350
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 4 org.eclipse.core.filesystem 4 273 2023-07-26 02:13:33.350
!MESSAGE Problems encountered while deleting files.
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2023-07-26 02:13:33.350
!MESSAGE Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAO\DAOConfigurationException.class.
!STACK 0
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAO\DAOConfigurationException.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2023-07-26 02:13:33.350
!MESSAGE Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAO.

!ENTRY org.eclipse.jdt.core 4 4 2023-07-26 02:13:33.397
!MESSAGE Error occurred while deleting: /superbet/WebContent/WEB-INF/classes/superbetDAOImpl
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:784)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete '/superbet/WebContent/WEB-INF/classes/superbetDAOImpl'.
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:367)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Problems encountered while deleting files.
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAOImpl\KenoDAOImpl.class.
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAOImpl\KenoDAOImpl.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAOImpl.
!SUBENTRY 1 org.eclipse.core.resources 4 273 2023-07-26 02:13:33.398
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 2 org.eclipse.core.resources 4 273 2023-07-26 02:13:33.398
!MESSAGE Could not delete '/superbet/WebContent/WEB-INF/classes/superbetDAOImpl'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:367)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Problems encountered while deleting files.
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAOImpl\KenoDAOImpl.class.
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAOImpl\KenoDAOImpl.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Contains: Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAOImpl.
!SUBENTRY 3 org.eclipse.core.resources 4 273 2023-07-26 02:13:33.398
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 4 org.eclipse.core.filesystem 4 273 2023-07-26 02:13:33.398
!MESSAGE Problems encountered while deleting files.
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2023-07-26 02:13:33.398
!MESSAGE Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAOImpl\KenoDAOImpl.class.
!STACK 0
java.nio.file.FileSystemException: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAOImpl\KenoDAOImpl.class: Le processus ne peut pas accéder au fichier car ce fichier est utilisé par un autre processus
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1191)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:250)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.localstore.DeleteVisitor.delete(DeleteVisitor.java:66)
	at org.eclipse.core.internal.localstore.DeleteVisitor.visit(DeleteVisitor.java:156)
	at org.eclipse.core.internal.localstore.UnifiedTree.accept(UnifiedTree.java:119)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.delete(FileSystemResourceManager.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFolder(ResourceTree.java:364)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFolder(ResourceTree.java:816)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1802)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:771)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:140)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.clean(JavaBuilder.java:317)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:1029)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:254)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:311)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:400)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:403)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:514)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:462)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:544)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:524)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:413)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog.doClean(CleanDialog.java:355)
	at org.eclipse.ui.internal.ide.dialogs.CleanDialog$1.runInWorkspace(CleanDialog.java:159)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:43)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 5 org.eclipse.core.filesystem 4 273 2023-07-26 02:13:33.399
!MESSAGE Could not delete: D:\projets_JC\superbet\superbet\WebContent\WEB-INF\classes\superbetDAOImpl.

!ENTRY org.eclipse.lsp4e 2 0 2023-07-26 02:30:32.129
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-26 02:32:18.704
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 4 0 2023-07-26 22:51:24.646
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy35.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-26 22:51:24.655
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy34.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-26 22:51:24.656
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy34.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-26 22:51:24.656
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy35.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 2 0 2023-07-26 22:51:25.647
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-27 00:35:01.567
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 1 0 2023-07-27 01:30:37.694
!MESSAGE [Info]	ESLint server running in node v16.14.2

!ENTRY tern.eclipse.ide.core 4 0 2023-07-27 01:30:51.067
!MESSAGE Cannot start node process.
!STACK 0
tern.TernException: Cannot start node process.
	at tern.eclipse.ide.internal.core.resources.IDETernFileUploader$1.onError(IDETernFileUploader.java:133)
	at tern.server.nodejs.NodejsTernServer.request(NodejsTernServer.java:207)
	at tern.eclipse.ide.internal.core.resources.IDETernFileUploader.run(IDETernFileUploader.java:124)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: tern.server.nodejs.process.NodejsProcessException: Cannot start node process.
	at tern.server.nodejs.process.AbstractNodejsProcess.waitOnStartNodejs(AbstractNodejsProcess.java:130)
	at tern.server.nodejs.process.AbstractNodejsProcess.start(AbstractNodejsProcess.java:95)
	at tern.server.nodejs.NodejsTernServer.getBaseURL(NodejsTernServer.java:276)
	at tern.server.nodejs.NodejsTernServer.makeRequest(NodejsTernServer.java:214)
	at tern.server.nodejs.NodejsTernServer.request(NodejsTernServer.java:204)
	... 2 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-27 01:30:54.468
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.operations.hover.LSPTextHover.getHoverRegion(LSPTextHover.java:150)
	at org.eclipse.ui.internal.genericeditor.hover.CompositeTextHover.getHoverRegion(CompositeTextHover.java:101)
	at org.eclipse.jface.text.TextViewerHoverManager.computeInformation(TextViewerHoverManager.java:128)
	at org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:1101)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager$MouseTracker.mouseHover(AbstractHoverInformationControlManager.java:511)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:212)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.lsp4e 4 0 2023-07-27 01:30:55.053
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.operations.hover.LSPTextHover.getHoverInfo(LSPTextHover.java:73)
	at org.eclipse.ui.internal.genericeditor.hover.CompositeTextHover.getHoverInfo2(CompositeTextHover.java:60)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 1 0 2023-07-27 01:30:55.170
!MESSAGE [Info]	[lspserver] Using Typescript version (bundled) 4.6.4 from path "C:\Users\Intelso\.p2\pool\plugins\org.eclipse.wildwebdeveloper_0.5.22.202205250019\node_modules\typescript\lib\tsserver.js"

!ENTRY org.eclipse.lsp4e 4 0 2023-07-27 01:30:56.046
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.operations.hover.LSPTextHover.getHoverRegion(LSPTextHover.java:150)
	at org.eclipse.ui.internal.genericeditor.hover.CompositeTextHover.getHoverRegion(CompositeTextHover.java:101)
	at org.eclipse.jface.text.TextViewerHoverManager.computeInformation(TextViewerHoverManager.java:128)
	at org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:1101)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager$MouseTracker.mouseHover(AbstractHoverInformationControlManager.java:511)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:212)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4251)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4068)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.lsp4e 4 0 2023-07-27 01:30:56.548
!MESSAGE TimeoutException
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.operations.hover.LSPTextHover.getHoverInfo(LSPTextHover.java:73)
	at org.eclipse.ui.internal.genericeditor.hover.CompositeTextHover.getHoverInfo2(CompositeTextHover.java:60)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 4 0 2023-07-27 01:31:52.247
!MESSAGE [Error]	[tsserver] npm notice 
npm notice New major version of npm available! 8.5.0 -> 9.8.1
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v9.8.1>
npm notice Run `npm install -g npm@9.8.1` to update!
npm notice 


!ENTRY org.eclipse.lsp4e 1 0 2023-07-27 01:50:24.438
!MESSAGE [Info]	ESLint server running in node v16.14.2

!ENTRY org.eclipse.wildwebdeveloper.xml 4 0 2023-07-27 03:43:49.741
!MESSAGE Error while getting URI 'platform:/plugin/org.eclipse.persistence.moxy/org/eclipse/persistence/jaxb/eclipselink_oxm_2_5.xsd' from plugin 'org.eclipse.jpt.common.eclipselink.core' : /org/eclipse/persistence/jaxb/eclipselink_oxm_2_5.xsd
!STACK 0
java.io.FileNotFoundException: /org/eclipse/persistence/jaxb/eclipselink_oxm_2_5.xsd
	at org.eclipse.osgi.storage.url.bundleentry.Handler.findBundleEntry(Handler.java:55)
	at org.eclipse.osgi.storage.url.BundleResourceHandler.openConnection(BundleResourceHandler.java:182)
	at java.base/java.net.URL.openConnection(URL.java:1094)
	at org.eclipse.core.internal.boot.PlatformURLConnection.connect(PlatformURLConnection.java:115)
	at org.eclipse.core.internal.boot.PlatformURLConnection.getURLAsLocal(PlatformURLConnection.java:240)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:37)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:263)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.createURI(XMLCatalogs.java:139)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.lambda$3(XMLCatalogs.java:87)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.getWTPExtensionCatalog(XMLCatalogs.java:65)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.getAllCatalogs(XMLCatalogs.java:52)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLPreferenceConstants.storePreferencesToLemminxOptions(XMLPreferenceConstants.java:90)
	at org.eclipse.wildwebdeveloper.xml.internal.XMLLanguageServer.mergeCustomInitializationOptions(XMLLanguageServer.java:169)
	at org.eclipse.wildwebdeveloper.xml.internal.XMLLanguageServer.getInitializationOptions(XMLLanguageServer.java:164)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$7(LanguageServerWrapper.java:364)
	at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1150)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1773)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-27 08:00:00.812
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-27 22:00:40.078
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 4 0 2023-07-31 06:08:31.397
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy35.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-31 06:08:31.488
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy35.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-31 06:08:31.489
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy34.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 4 0 2023-07-31 06:08:31.490
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:456)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$3(LanguageServerWrapper.java:270)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy34.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$12(LanguageServerWrapper.java:454)
	... 7 more
Caused by: java.io.IOException: Le canal de communication est sur le point d’être fermé
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more

!ENTRY org.eclipse.lsp4e 2 0 2023-07-31 06:48:13.478
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.core.resources 4 1 2023-07-31 06:58:24.324
!MESSAGE Core exception while retrieving the content description
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/superbet/WebContent/ressources/config.properties)[368]: java.io.FileNotFoundException: D:\projets_JC\superbet\superbet\WebContent\ressources\config.properties (Le fichier spécifié est introuvable)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:418)
	at org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream.ensureOpened(ContentDescriptionManager.java:159)
	at org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream.read(ContentDescriptionManager.java:176)
	at java.base/java.io.InputStream.read(InputStream.java:218)
	at org.eclipse.core.internal.content.LazyInputStream.loadBlock(LazyInputStream.java:104)
	at org.eclipse.core.internal.content.LazyInputStream.ensureAvailable(LazyInputStream.java:68)
	at org.eclipse.core.internal.content.LazyInputStream.read(LazyInputStream.java:127)
	at org.eclipse.core.internal.content.Util.getByteOrderMark(Util.java:122)
	at org.eclipse.core.internal.content.TextContentDescriber.describe(TextContentDescriber.java:46)
	at org.eclipse.core.internal.content.ContentType.describe(ContentType.java:182)
	at org.eclipse.core.internal.content.ContentType.internalGetDescriptionFor(ContentType.java:473)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:391)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:395)
	at org.eclipse.core.internal.content.ContentTypeMatcher.getDescriptionFor(ContentTypeMatcher.java:82)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.readDescription(ContentDescriptionManager.java:470)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(ContentDescriptionManager.java:379)
	at org.eclipse.core.internal.resources.File.getContentDescription(File.java:263)
	at org.eclipse.core.internal.propertytester.FilePropertyTester.testContentType(FilePropertyTester.java:104)
	at org.eclipse.core.internal.propertytester.FilePropertyTester.test(FilePropertyTester.java:56)
	at org.eclipse.core.internal.expressions.Property.test(Property.java:65)
	at org.eclipse.core.expressions.TestExpression.evaluate(TestExpression.java:107)
	at org.eclipse.core.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:54)
	at org.eclipse.core.expressions.AndExpression.evaluate(AndExpression.java:36)
	at org.eclipse.core.expressions.CompositeExpression.evaluateOr(CompositeExpression.java:68)
	at org.eclipse.core.expressions.OrExpression.evaluate(OrExpression.java:26)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin$Evaluator.run(NavigatorPlugin.java:245)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.navigator.CustomAndExpression.evaluate(CustomAndExpression.java:74)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin$Evaluator.run(NavigatorPlugin.java:245)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin.safeEvaluate(NavigatorPlugin.java:260)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.isPossibleChild(NavigatorContentDescriptor.java:442)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptorManager.findDescriptors(NavigatorContentDescriptorManager.java:176)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptorManager.findDescriptorsForPossibleChild(NavigatorContentDescriptorManager.java:149)
	at org.eclipse.ui.internal.navigator.NavigatorContentService.findDescriptorsWithPossibleChild(NavigatorContentService.java:810)
	at org.eclipse.ui.internal.navigator.NavigatorContentService.findPossibleLabelExtensions(NavigatorContentService.java:427)
	at org.eclipse.ui.internal.navigator.NavigatorContentServiceLabelProvider.getStyledText(NavigatorContentServiceLabelProvider.java:152)
	at org.eclipse.ui.internal.navigator.NavigatorDecoratingLabelProvider$StyledLabelProviderAdapter.getStyledText(NavigatorDecoratingLabelProvider.java:69)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.getStyledText(DelegatingStyledCellLabelProvider.java:209)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.getStyledText(DecoratingStyledCellLabelProvider.java:197)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.update(DelegatingStyledCellLabelProvider.java:109)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.update(DecoratingStyledCellLabelProvider.java:134)
	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:144)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:970)
	at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:126)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:1048)
	at org.eclipse.ui.navigator.CommonViewer.doUpdateItem(CommonViewer.java:404)
	at org.eclipse.ui.internal.navigator.resources.ResourceToItemsMapper.updateItem(ResourceToItemsMapper.java:153)
	at org.eclipse.ui.internal.navigator.resources.ResourceToItemsMapper.objectChanged(ResourceToItemsMapper.java:141)
	at org.eclipse.ui.navigator.CommonViewer.handleLabelProviderChanged(CommonViewer.java:228)
	at org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:95)
	at org.eclipse.jface.viewers.BaseLabelProvider$1.run(BaseLabelProvider.java:75)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.BaseLabelProvider.fireLabelProviderChanged(BaseLabelProvider.java:72)
	at org.eclipse.ui.internal.decorators.DecoratorManager.lambda$0(DecoratorManager.java:351)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.DecoratorManager.fireListener(DecoratorManager.java:351)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.runInUIThread(DecorationScheduler.java:560)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4043)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3648)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 1 org.eclipse.core.resources 4 368 2023-07-31 06:58:24.325
!MESSAGE File not found: /superbet/WebContent/ressources/config.properties.
!STACK 0
java.io.FileNotFoundException: D:\projets_JC\superbet\superbet\WebContent\ressources\config.properties (Le fichier spécifié est introuvable)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:418)
	at org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream.ensureOpened(ContentDescriptionManager.java:159)
	at org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream.read(ContentDescriptionManager.java:176)
	at java.base/java.io.InputStream.read(InputStream.java:218)
	at org.eclipse.core.internal.content.LazyInputStream.loadBlock(LazyInputStream.java:104)
	at org.eclipse.core.internal.content.LazyInputStream.ensureAvailable(LazyInputStream.java:68)
	at org.eclipse.core.internal.content.LazyInputStream.read(LazyInputStream.java:127)
	at org.eclipse.core.internal.content.Util.getByteOrderMark(Util.java:122)
	at org.eclipse.core.internal.content.TextContentDescriber.describe(TextContentDescriber.java:46)
	at org.eclipse.core.internal.content.ContentType.describe(ContentType.java:182)
	at org.eclipse.core.internal.content.ContentType.internalGetDescriptionFor(ContentType.java:473)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:391)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:395)
	at org.eclipse.core.internal.content.ContentTypeMatcher.getDescriptionFor(ContentTypeMatcher.java:82)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.readDescription(ContentDescriptionManager.java:470)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(ContentDescriptionManager.java:379)
	at org.eclipse.core.internal.resources.File.getContentDescription(File.java:263)
	at org.eclipse.core.internal.propertytester.FilePropertyTester.testContentType(FilePropertyTester.java:104)
	at org.eclipse.core.internal.propertytester.FilePropertyTester.test(FilePropertyTester.java:56)
	at org.eclipse.core.internal.expressions.Property.test(Property.java:65)
	at org.eclipse.core.expressions.TestExpression.evaluate(TestExpression.java:107)
	at org.eclipse.core.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:54)
	at org.eclipse.core.expressions.AndExpression.evaluate(AndExpression.java:36)
	at org.eclipse.core.expressions.CompositeExpression.evaluateOr(CompositeExpression.java:68)
	at org.eclipse.core.expressions.OrExpression.evaluate(OrExpression.java:26)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin$Evaluator.run(NavigatorPlugin.java:245)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.navigator.CustomAndExpression.evaluate(CustomAndExpression.java:74)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin$Evaluator.run(NavigatorPlugin.java:245)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin.safeEvaluate(NavigatorPlugin.java:260)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.isPossibleChild(NavigatorContentDescriptor.java:442)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptorManager.findDescriptors(NavigatorContentDescriptorManager.java:176)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptorManager.findDescriptorsForPossibleChild(NavigatorContentDescriptorManager.java:149)
	at org.eclipse.ui.internal.navigator.NavigatorContentService.findDescriptorsWithPossibleChild(NavigatorContentService.java:810)
	at org.eclipse.ui.internal.navigator.NavigatorContentService.findPossibleLabelExtensions(NavigatorContentService.java:427)
	at org.eclipse.ui.internal.navigator.NavigatorContentServiceLabelProvider.getStyledText(NavigatorContentServiceLabelProvider.java:152)
	at org.eclipse.ui.internal.navigator.NavigatorDecoratingLabelProvider$StyledLabelProviderAdapter.getStyledText(NavigatorDecoratingLabelProvider.java:69)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.getStyledText(DelegatingStyledCellLabelProvider.java:209)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.getStyledText(DecoratingStyledCellLabelProvider.java:197)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.update(DelegatingStyledCellLabelProvider.java:109)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.update(DecoratingStyledCellLabelProvider.java:134)
	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:144)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:970)
	at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:126)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:1048)
	at org.eclipse.ui.navigator.CommonViewer.doUpdateItem(CommonViewer.java:404)
	at org.eclipse.ui.internal.navigator.resources.ResourceToItemsMapper.updateItem(ResourceToItemsMapper.java:153)
	at org.eclipse.ui.internal.navigator.resources.ResourceToItemsMapper.objectChanged(ResourceToItemsMapper.java:141)
	at org.eclipse.ui.navigator.CommonViewer.handleLabelProviderChanged(CommonViewer.java:228)
	at org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:95)
	at org.eclipse.jface.viewers.BaseLabelProvider$1.run(BaseLabelProvider.java:75)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.BaseLabelProvider.fireLabelProviderChanged(BaseLabelProvider.java:72)
	at org.eclipse.ui.internal.decorators.DecoratorManager.lambda$0(DecoratorManager.java:351)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.DecoratorManager.fireListener(DecoratorManager.java:351)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.runInUIThread(DecorationScheduler.java:560)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4043)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3648)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.core.resources 4 1 2023-07-31 06:58:24.328
!MESSAGE Core exception while retrieving the content description
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/superbet/WebContent/ressources/config.properties)[368]: java.io.FileNotFoundException: D:\projets_JC\superbet\superbet\WebContent\ressources\config.properties (Le fichier spécifié est introuvable)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:418)
	at org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream.ensureOpened(ContentDescriptionManager.java:159)
	at org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream.read(ContentDescriptionManager.java:176)
	at java.base/java.io.InputStream.read(InputStream.java:218)
	at org.eclipse.core.internal.content.LazyInputStream.loadBlock(LazyInputStream.java:104)
	at org.eclipse.core.internal.content.LazyInputStream.ensureAvailable(LazyInputStream.java:68)
	at org.eclipse.core.internal.content.LazyInputStream.read(LazyInputStream.java:127)
	at org.eclipse.core.internal.content.Util.getByteOrderMark(Util.java:122)
	at org.eclipse.core.internal.content.TextContentDescriber.describe(TextContentDescriber.java:46)
	at org.eclipse.core.internal.content.ContentType.describe(ContentType.java:182)
	at org.eclipse.core.internal.content.ContentType.internalGetDescriptionFor(ContentType.java:473)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:391)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:395)
	at org.eclipse.core.internal.content.ContentTypeMatcher.getDescriptionFor(ContentTypeMatcher.java:82)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.readDescription(ContentDescriptionManager.java:470)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(ContentDescriptionManager.java:379)
	at org.eclipse.core.internal.resources.File.getContentDescription(File.java:263)
	at org.eclipse.core.internal.propertytester.FilePropertyTester.testContentType(FilePropertyTester.java:104)
	at org.eclipse.core.internal.propertytester.FilePropertyTester.test(FilePropertyTester.java:56)
	at org.eclipse.core.internal.expressions.Property.test(Property.java:65)
	at org.eclipse.core.expressions.TestExpression.evaluate(TestExpression.java:107)
	at org.eclipse.core.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:54)
	at org.eclipse.core.expressions.AndExpression.evaluate(AndExpression.java:36)
	at org.eclipse.core.expressions.CompositeExpression.evaluateOr(CompositeExpression.java:68)
	at org.eclipse.core.expressions.OrExpression.evaluate(OrExpression.java:26)
	at org.eclipse.core.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:54)
	at org.eclipse.core.internal.expressions.EnablementExpression.evaluate(EnablementExpression.java:59)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin$Evaluator.run(NavigatorPlugin.java:245)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin.safeEvaluate(NavigatorPlugin.java:260)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.isPossibleChild(NavigatorContentDescriptor.java:444)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptorManager.findDescriptors(NavigatorContentDescriptorManager.java:176)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptorManager.findDescriptorsForPossibleChild(NavigatorContentDescriptorManager.java:149)
	at org.eclipse.ui.internal.navigator.NavigatorContentService.findDescriptorsWithPossibleChild(NavigatorContentService.java:810)
	at org.eclipse.ui.internal.navigator.NavigatorContentService.findPossibleLabelExtensions(NavigatorContentService.java:427)
	at org.eclipse.ui.internal.navigator.NavigatorContentServiceLabelProvider.getStyledText(NavigatorContentServiceLabelProvider.java:152)
	at org.eclipse.ui.internal.navigator.NavigatorDecoratingLabelProvider$StyledLabelProviderAdapter.getStyledText(NavigatorDecoratingLabelProvider.java:69)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.getStyledText(DelegatingStyledCellLabelProvider.java:209)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.getStyledText(DecoratingStyledCellLabelProvider.java:197)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.update(DelegatingStyledCellLabelProvider.java:109)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.update(DecoratingStyledCellLabelProvider.java:134)
	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:144)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:970)
	at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:126)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:1048)
	at org.eclipse.ui.navigator.CommonViewer.doUpdateItem(CommonViewer.java:404)
	at org.eclipse.ui.internal.navigator.resources.ResourceToItemsMapper.updateItem(ResourceToItemsMapper.java:153)
	at org.eclipse.ui.internal.navigator.resources.ResourceToItemsMapper.objectChanged(ResourceToItemsMapper.java:141)
	at org.eclipse.ui.navigator.CommonViewer.handleLabelProviderChanged(CommonViewer.java:228)
	at org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:95)
	at org.eclipse.jface.viewers.BaseLabelProvider$1.run(BaseLabelProvider.java:75)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.BaseLabelProvider.fireLabelProviderChanged(BaseLabelProvider.java:72)
	at org.eclipse.ui.internal.decorators.DecoratorManager.lambda$0(DecoratorManager.java:351)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.DecoratorManager.fireListener(DecoratorManager.java:351)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.runInUIThread(DecorationScheduler.java:560)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4043)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3648)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 1 org.eclipse.core.resources 4 368 2023-07-31 06:58:24.329
!MESSAGE File not found: /superbet/WebContent/ressources/config.properties.
!STACK 0
java.io.FileNotFoundException: D:\projets_JC\superbet\superbet\WebContent\ressources\config.properties (Le fichier spécifié est introuvable)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:418)
	at org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream.ensureOpened(ContentDescriptionManager.java:159)
	at org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream.read(ContentDescriptionManager.java:176)
	at java.base/java.io.InputStream.read(InputStream.java:218)
	at org.eclipse.core.internal.content.LazyInputStream.loadBlock(LazyInputStream.java:104)
	at org.eclipse.core.internal.content.LazyInputStream.ensureAvailable(LazyInputStream.java:68)
	at org.eclipse.core.internal.content.LazyInputStream.read(LazyInputStream.java:127)
	at org.eclipse.core.internal.content.Util.getByteOrderMark(Util.java:122)
	at org.eclipse.core.internal.content.TextContentDescriber.describe(TextContentDescriber.java:46)
	at org.eclipse.core.internal.content.ContentType.describe(ContentType.java:182)
	at org.eclipse.core.internal.content.ContentType.internalGetDescriptionFor(ContentType.java:473)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:391)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:395)
	at org.eclipse.core.internal.content.ContentTypeMatcher.getDescriptionFor(ContentTypeMatcher.java:82)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.readDescription(ContentDescriptionManager.java:470)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(ContentDescriptionManager.java:379)
	at org.eclipse.core.internal.resources.File.getContentDescription(File.java:263)
	at org.eclipse.core.internal.propertytester.FilePropertyTester.testContentType(FilePropertyTester.java:104)
	at org.eclipse.core.internal.propertytester.FilePropertyTester.test(FilePropertyTester.java:56)
	at org.eclipse.core.internal.expressions.Property.test(Property.java:65)
	at org.eclipse.core.expressions.TestExpression.evaluate(TestExpression.java:107)
	at org.eclipse.core.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:54)
	at org.eclipse.core.expressions.AndExpression.evaluate(AndExpression.java:36)
	at org.eclipse.core.expressions.CompositeExpression.evaluateOr(CompositeExpression.java:68)
	at org.eclipse.core.expressions.OrExpression.evaluate(OrExpression.java:26)
	at org.eclipse.core.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:54)
	at org.eclipse.core.internal.expressions.EnablementExpression.evaluate(EnablementExpression.java:59)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin$Evaluator.run(NavigatorPlugin.java:245)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin.safeEvaluate(NavigatorPlugin.java:260)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.isPossibleChild(NavigatorContentDescriptor.java:444)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptorManager.findDescriptors(NavigatorContentDescriptorManager.java:176)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptorManager.findDescriptorsForPossibleChild(NavigatorContentDescriptorManager.java:149)
	at org.eclipse.ui.internal.navigator.NavigatorContentService.findDescriptorsWithPossibleChild(NavigatorContentService.java:810)
	at org.eclipse.ui.internal.navigator.NavigatorContentService.findPossibleLabelExtensions(NavigatorContentService.java:427)
	at org.eclipse.ui.internal.navigator.NavigatorContentServiceLabelProvider.getStyledText(NavigatorContentServiceLabelProvider.java:152)
	at org.eclipse.ui.internal.navigator.NavigatorDecoratingLabelProvider$StyledLabelProviderAdapter.getStyledText(NavigatorDecoratingLabelProvider.java:69)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.getStyledText(DelegatingStyledCellLabelProvider.java:209)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.getStyledText(DecoratingStyledCellLabelProvider.java:197)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.update(DelegatingStyledCellLabelProvider.java:109)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.update(DecoratingStyledCellLabelProvider.java:134)
	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:144)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:970)
	at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:126)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:1048)
	at org.eclipse.ui.navigator.CommonViewer.doUpdateItem(CommonViewer.java:404)
	at org.eclipse.ui.internal.navigator.resources.ResourceToItemsMapper.updateItem(ResourceToItemsMapper.java:153)
	at org.eclipse.ui.internal.navigator.resources.ResourceToItemsMapper.objectChanged(ResourceToItemsMapper.java:141)
	at org.eclipse.ui.navigator.CommonViewer.handleLabelProviderChanged(CommonViewer.java:228)
	at org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:95)
	at org.eclipse.jface.viewers.BaseLabelProvider$1.run(BaseLabelProvider.java:75)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.BaseLabelProvider.fireLabelProviderChanged(BaseLabelProvider.java:72)
	at org.eclipse.ui.internal.decorators.DecoratorManager.lambda$0(DecoratorManager.java:351)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.DecoratorManager.fireListener(DecoratorManager.java:351)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.runInUIThread(DecorationScheduler.java:560)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4043)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3648)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.core.resources 4 1 2023-07-31 06:58:24.332
!MESSAGE Core exception while retrieving the content description
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/superbet/WebContent/ressources/config.properties)[368]: java.io.FileNotFoundException: D:\projets_JC\superbet\superbet\WebContent\ressources\config.properties (Le fichier spécifié est introuvable)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:418)
	at org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream.ensureOpened(ContentDescriptionManager.java:159)
	at org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream.read(ContentDescriptionManager.java:176)
	at java.base/java.io.InputStream.read(InputStream.java:218)
	at org.eclipse.core.internal.content.LazyInputStream.loadBlock(LazyInputStream.java:104)
	at org.eclipse.core.internal.content.LazyInputStream.ensureAvailable(LazyInputStream.java:68)
	at org.eclipse.core.internal.content.LazyInputStream.read(LazyInputStream.java:127)
	at org.eclipse.core.internal.content.Util.getByteOrderMark(Util.java:122)
	at org.eclipse.core.internal.content.TextContentDescriber.describe(TextContentDescriber.java:46)
	at org.eclipse.core.internal.content.ContentType.describe(ContentType.java:182)
	at org.eclipse.core.internal.content.ContentType.internalGetDescriptionFor(ContentType.java:473)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:391)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:395)
	at org.eclipse.core.internal.content.ContentTypeMatcher.getDescriptionFor(ContentTypeMatcher.java:82)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.readDescription(ContentDescriptionManager.java:470)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(ContentDescriptionManager.java:379)
	at org.eclipse.core.internal.resources.File.getContentDescription(File.java:263)
	at org.eclipse.core.internal.propertytester.FilePropertyTester.testContentType(FilePropertyTester.java:104)
	at org.eclipse.core.internal.propertytester.FilePropertyTester.test(FilePropertyTester.java:56)
	at org.eclipse.core.internal.expressions.Property.test(Property.java:65)
	at org.eclipse.core.expressions.TestExpression.evaluate(TestExpression.java:107)
	at org.eclipse.core.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:54)
	at org.eclipse.core.expressions.AndExpression.evaluate(AndExpression.java:36)
	at org.eclipse.core.expressions.CompositeExpression.evaluateOr(CompositeExpression.java:68)
	at org.eclipse.core.expressions.OrExpression.evaluate(OrExpression.java:26)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin$Evaluator.run(NavigatorPlugin.java:245)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.navigator.CustomAndExpression.evaluate(CustomAndExpression.java:74)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin$Evaluator.run(NavigatorPlugin.java:245)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin.safeEvaluate(NavigatorPlugin.java:260)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.isPossibleChild(NavigatorContentDescriptor.java:442)
	at org.eclipse.ui.internal.navigator.NavigatorContentService.findOverridingLabelExtensions(NavigatorContentService.java:447)
	at org.eclipse.ui.internal.navigator.NavigatorContentService.findPossibleLabelExtensions(NavigatorContentService.java:436)
	at org.eclipse.ui.internal.navigator.NavigatorContentServiceLabelProvider.getStyledText(NavigatorContentServiceLabelProvider.java:152)
	at org.eclipse.ui.internal.navigator.NavigatorDecoratingLabelProvider$StyledLabelProviderAdapter.getStyledText(NavigatorDecoratingLabelProvider.java:69)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.getStyledText(DelegatingStyledCellLabelProvider.java:209)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.getStyledText(DecoratingStyledCellLabelProvider.java:197)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.update(DelegatingStyledCellLabelProvider.java:109)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.update(DecoratingStyledCellLabelProvider.java:134)
	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:144)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:970)
	at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:126)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:1048)
	at org.eclipse.ui.navigator.CommonViewer.doUpdateItem(CommonViewer.java:404)
	at org.eclipse.ui.internal.navigator.resources.ResourceToItemsMapper.updateItem(ResourceToItemsMapper.java:153)
	at org.eclipse.ui.internal.navigator.resources.ResourceToItemsMapper.objectChanged(ResourceToItemsMapper.java:141)
	at org.eclipse.ui.navigator.CommonViewer.handleLabelProviderChanged(CommonViewer.java:228)
	at org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:95)
	at org.eclipse.jface.viewers.BaseLabelProvider$1.run(BaseLabelProvider.java:75)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.BaseLabelProvider.fireLabelProviderChanged(BaseLabelProvider.java:72)
	at org.eclipse.ui.internal.decorators.DecoratorManager.lambda$0(DecoratorManager.java:351)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.DecoratorManager.fireListener(DecoratorManager.java:351)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.runInUIThread(DecorationScheduler.java:560)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4043)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3648)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 1 org.eclipse.core.resources 4 368 2023-07-31 06:58:24.333
!MESSAGE File not found: /superbet/WebContent/ressources/config.properties.
!STACK 0
java.io.FileNotFoundException: D:\projets_JC\superbet\superbet\WebContent\ressources\config.properties (Le fichier spécifié est introuvable)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at org.eclipse.core.internal.filesystem.local.LocalFile.openInputStream(LocalFile.java:418)
	at org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream.ensureOpened(ContentDescriptionManager.java:159)
	at org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream.read(ContentDescriptionManager.java:176)
	at java.base/java.io.InputStream.read(InputStream.java:218)
	at org.eclipse.core.internal.content.LazyInputStream.loadBlock(LazyInputStream.java:104)
	at org.eclipse.core.internal.content.LazyInputStream.ensureAvailable(LazyInputStream.java:68)
	at org.eclipse.core.internal.content.LazyInputStream.read(LazyInputStream.java:127)
	at org.eclipse.core.internal.content.Util.getByteOrderMark(Util.java:122)
	at org.eclipse.core.internal.content.TextContentDescriber.describe(TextContentDescriber.java:46)
	at org.eclipse.core.internal.content.ContentType.describe(ContentType.java:182)
	at org.eclipse.core.internal.content.ContentType.internalGetDescriptionFor(ContentType.java:473)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:391)
	at org.eclipse.core.internal.content.ContentTypeCatalog.getDescriptionFor(ContentTypeCatalog.java:395)
	at org.eclipse.core.internal.content.ContentTypeMatcher.getDescriptionFor(ContentTypeMatcher.java:82)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.readDescription(ContentDescriptionManager.java:470)
	at org.eclipse.core.internal.resources.ContentDescriptionManager.getDescriptionFor(ContentDescriptionManager.java:379)
	at org.eclipse.core.internal.resources.File.getContentDescription(File.java:263)
	at org.eclipse.core.internal.propertytester.FilePropertyTester.testContentType(FilePropertyTester.java:104)
	at org.eclipse.core.internal.propertytester.FilePropertyTester.test(FilePropertyTester.java:56)
	at org.eclipse.core.internal.expressions.Property.test(Property.java:65)
	at org.eclipse.core.expressions.TestExpression.evaluate(TestExpression.java:107)
	at org.eclipse.core.expressions.CompositeExpression.evaluateAnd(CompositeExpression.java:54)
	at org.eclipse.core.expressions.AndExpression.evaluate(AndExpression.java:36)
	at org.eclipse.core.expressions.CompositeExpression.evaluateOr(CompositeExpression.java:68)
	at org.eclipse.core.expressions.OrExpression.evaluate(OrExpression.java:26)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin$Evaluator.run(NavigatorPlugin.java:245)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.navigator.CustomAndExpression.evaluate(CustomAndExpression.java:74)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin$Evaluator.run(NavigatorPlugin.java:245)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.navigator.NavigatorPlugin.safeEvaluate(NavigatorPlugin.java:260)
	at org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.isPossibleChild(NavigatorContentDescriptor.java:442)
	at org.eclipse.ui.internal.navigator.NavigatorContentService.findOverridingLabelExtensions(NavigatorContentService.java:447)
	at org.eclipse.ui.internal.navigator.NavigatorContentService.findPossibleLabelExtensions(NavigatorContentService.java:436)
	at org.eclipse.ui.internal.navigator.NavigatorContentServiceLabelProvider.getStyledText(NavigatorContentServiceLabelProvider.java:152)
	at org.eclipse.ui.internal.navigator.NavigatorDecoratingLabelProvider$StyledLabelProviderAdapter.getStyledText(NavigatorDecoratingLabelProvider.java:69)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.getStyledText(DelegatingStyledCellLabelProvider.java:209)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.getStyledText(DecoratingStyledCellLabelProvider.java:197)
	at org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.update(DelegatingStyledCellLabelProvider.java:109)
	at org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.update(DecoratingStyledCellLabelProvider.java:134)
	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:144)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:970)
	at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:126)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:1048)
	at org.eclipse.ui.navigator.CommonViewer.doUpdateItem(CommonViewer.java:404)
	at org.eclipse.ui.internal.navigator.resources.ResourceToItemsMapper.updateItem(ResourceToItemsMapper.java:153)
	at org.eclipse.ui.internal.navigator.resources.ResourceToItemsMapper.objectChanged(ResourceToItemsMapper.java:141)
	at org.eclipse.ui.navigator.CommonViewer.handleLabelProviderChanged(CommonViewer.java:228)
	at org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java:95)
	at org.eclipse.jface.viewers.BaseLabelProvider$1.run(BaseLabelProvider.java:75)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.BaseLabelProvider.fireLabelProviderChanged(BaseLabelProvider.java:72)
	at org.eclipse.ui.internal.decorators.DecoratorManager.lambda$0(DecoratorManager.java:351)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.DecoratorManager.fireListener(DecoratorManager.java:351)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.runInUIThread(DecorationScheduler.java:560)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4043)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3648)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.lsp4e 2 0 2023-07-31 07:03:41.758
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
