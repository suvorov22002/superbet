package superbetDAO;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;

import superbetDAOImpl.AirtimeDAOImpl;
import superbetDAOImpl.CaissierDAOImpl;
import superbetDAOImpl.ConfigDAOImpl;
import superbetDAOImpl.EffChoicekDAOImpl;
import superbetDAOImpl.EffChoicepDAOImpl;
import superbetDAOImpl.GameCycleDAOImpl;
import superbetDAOImpl.KenoDAOImpl;
import superbetDAOImpl.MisekDAOImpl;
import superbetDAOImpl.Misek_tempDAOImpl;
import superbetDAOImpl.MisepDAOImpl;
import superbetDAOImpl.MisetDAOImpl;
import superbetDAOImpl.PartnerDAOImpl;
import superbetDAOImpl.SpinDAOImpl;
import superbetDAOImpl.UtilDAOImpl;
import superbetDAOImpl.VersementDAOImpl;

public class DAOFactory {
	
	private static final String FICHIER_PROPERTIES = "/superbetDAO/dao.properties";
	private static final String PROPERTY_URL = "url";
	private static final String PROPERTY_DRIVER = "driver";
	private static final String PROPERTY_NOM_UTILISATEUR = "username";
	private static final String PROPERTY_MOT_DE_PASSE = "password";
	
	private String url;
	private String username;
	private String password;
	
	
	DAOFactory( String url, String username, String password ) {
		this.url = url;
		this.username = username;
		this.password = password;
	}
	
	/*
	* Méthode chargée de récupérer les informations de connexion à la
	base de
	* données, charger le driver JDBC et retourner une instance de la
	Factory
	*/
	
	public static DAOFactory getInstance() throws DAOConfigurationException {
		
		Properties properties = new Properties();
		String url;
		String driver;
		String nomUtilisateur;
		String motDePasse;
		
		ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
		InputStream fichierProperties = classLoader.getResourceAsStream( FICHIER_PROPERTIES );
		
		if ( fichierProperties == null ) {
			throw new DAOConfigurationException( "Le fichier properties " + FICHIER_PROPERTIES + " est introuvable." );
		}
		
		try {
			properties.load( fichierProperties );
			url = properties.getProperty( PROPERTY_URL );
			driver = properties.getProperty( PROPERTY_DRIVER );
			nomUtilisateur = properties.getProperty(PROPERTY_NOM_UTILISATEUR );
			motDePasse = properties.getProperty(PROPERTY_MOT_DE_PASSE );
		} catch ( IOException e ) {
			throw new DAOConfigurationException( "Impossible de charger le fichier properties " + FICHIER_PROPERTIES, e );
		}
		
		try {
			Class.forName( driver );
		} catch ( ClassNotFoundException e ) {
			throw new DAOConfigurationException( "Le driver est introuvable dans le classpath.", e );
		}
		
		DAOFactory instance = new DAOFactory( url, nomUtilisateur, motDePasse );
			return instance;
	}
		
	/* Méthode chargée de fournir une connexion à la base de
		données */
	/* package */
	  public Connection getConnection() throws SQLException {
		return DriverManager.getConnection( url, username, password);
	  }	
			
	  /*
	  * Méthodes de récupération de l'implémentation des différents DAO
	  */
	  public CaissierDAO getCaissierDao() {
		  return new CaissierDAOImpl( this );
	  }	
	  
	  public EffChoicekDAO getEffChoicekDao(){
		  return new EffChoicekDAOImpl(this);
	  }
	  
	  public KenoDAO getKenoDao(){
		  return new KenoDAOImpl(this);
	  }
	  
	  public MisekDAO getMisekDao(){
		  return new MisekDAOImpl(this);
	  }
	  
	  public MisetDAO getMisetDao(){
		  return new MisetDAOImpl(this);
	  }
	  
	  public VersementDAO getVersementDao(){
		  return new VersementDAOImpl(this);
	  }
	  
	  public UtilDAO getUtilDao(){
		  return new UtilDAOImpl(this);
	  }
	  
	  public Misek_tempDAO getMisektpDao(){
		  return new Misek_tempDAOImpl(this);
	  }
	  
	  public PartnerDAO getPartnerDao(){
		  return new PartnerDAOImpl(this);
	  }
	  
	  public ConfigDAO getConfigDao(){
		  return new ConfigDAOImpl(this);
	  }
	  
	  public MisepDAO getMisepDao(){
		  return new MisepDAOImpl(this);
	  }
	  
	  public EffChoicepDAO getEffChoicepDao(){
		  return new EffChoicepDAOImpl(this);
	  }
	  
	  public SpinDAO getSpinDao(){
		  return new SpinDAOImpl(this);
	  }

	  public AirtimeDAO getAirtimeDao() {
		// TODO Auto-generated method stub
		return new AirtimeDAOImpl(this);
	}
	  
	  public GameCycleDAO getGameCycleDao() {
			// TODO Auto-generated method stub
			return new GameCycleDAOImpl(this);
		}
}
